{"version":3,"sources":["./src/app/modules/menu/app.module.ts","./src/app/modules/auth/app.module.ts","./src/app/modules/product/components/add-product/add-product.component.ts","./src/app/modules/product/components/add-product/add-product.component.html","./src/app/modules/footer/components/footer/footer.component.ts","./src/app/modules/footer/components/footer/footer.component.html","./src/app/modules/users/services/users.service.ts","./src/app/modules/product/services/product.service.ts","./src/app/modules/admin/services/admin.service.ts","./src/app/modules/users/components/user-profile/user-profile.component.ts","./src/app/modules/users/components/user-profile/user-profile.component.html","./src/environments/environment.ts","./src/app/modules/shoppingCart/components/shopping-cart/shopping-cart.component.ts","./src/app/modules/shoppingCart/components/shopping-cart/shopping-cart.component.html","./src/app/modules/common/components/ourproducts/ourproducts.component.ts","./src/app/modules/common/components/ourproducts/ourproducts.component.html","./src/app/modules/common/components/home/home.component.ts","./src/app/modules/common/components/home/home.component.html","./src/app/modules/users/components/user-address/user-address.component.ts","./src/app/modules/users/components/user-address/user-address.component.html","./src/app/modules/admin/app.module.ts","./src/app/modules/common/components/contactus/contactus.component.ts","./src/app/modules/common/components/contactus/contactus.component.html","./src/app/modules/shoppingCart/components/empty-cart/empty-cart.component.ts","./src/app/modules/shoppingCart/components/empty-cart/empty-cart.component.html","./src/app/modules/shoppingCart/services/shopping-cart.service.ts","./src/app/modules/header/app.module.ts","./src/app/modules/orders/components/sucess-order/sucess-order.component.html","./src/app/modules/orders/components/sucess-order/sucess-order.component.ts","./src/app/modules/users/app.module.ts","./src/app/modules/menu/components/menu/menu.component.ts","./src/app/modules/menu/components/menu/menu.component.html","./src/app/modules/orders/app.module.ts","./src/app/modules/common/services/categories.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/common/components/about/about.component.ts","./src/app/modules/common/components/about/about.component.html","./src/app/modules/admin/components/admin-products/admin-products.component.ts","./src/app/modules/admin/components/admin-products/admin-products.component.html","./src/app/modules/users/Pipe/date-sort.pipe.ts","./src/app/app.module.ts","./src/app/modules/product/components/product-details/product-details.component.ts","./src/app/modules/product/components/product-details/product-details.component.html","./src/app/modules/admin/Pipes/order-sort.pipe.ts","./src/app/modules/common/components/our-services/our-services.component.ts","./src/app/modules/common/components/our-services/our-services.component.html","./src/app/modules/Pipes/app.module.ts","./src/app/modules/orders/services/order.service.ts","./src/app/modules/auth/services/login.service.ts","./src/app/modules/header/components/header/header.component.ts","./src/app/modules/header/components/header/header.component.html","./src/app/modules/product/app.module.ts","./src/app/modules/admin/components/all-orders/all-orders.component.ts","./src/app/modules/admin/components/all-orders/all-orders.component.html","./src/app/modules/users/components/user-registration/user-registration.component.ts","./src/app/modules/users/components/user-registration/user-registration.component.html","./src/app/modules/admin/components/order-details/order-details.component.html","./src/app/modules/admin/components/order-details/order-details.component.ts","./src/app/modules/users/components/user-orders/user-orders.component.ts","./src/app/modules/users/components/user-orders/user-orders.component.html","./src/app/modules/payment/app.module.ts","./src/app/modules/orders/components/cart-orders/cart-orders.component.ts","./src/app/modules/orders/components/cart-orders/cart-orders.component.html","./src/app/modules/common/app.module.ts","./src/app/modules/Pipes/sort.pipe.ts","./src/app/modules/auth/components/login/login.component.ts","./src/app/modules/auth/components/login/login.component.html","./src/app/modules/users/components/user-info/user-info.component.ts","./src/app/modules/users/components/user-info/user-info.component.html","./src/app/modules/product/product-sort.pipe.ts","./src/app/modules/common/services/stock.service.ts","./src/app/app-routing.module.ts","./src/app/modules/shoppingCart/app.module.ts","./src/app/material.module.ts","./src/app/modules/footer/app.module.ts","./src/app/modules/product/components/products/products.component.ts","./src/app/modules/product/components/products/products.component.html","./src/app/modules/orders/components/orders/orders.component.ts","./src/app/modules/orders/components/orders/orders.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { AppRoutingModule } from 'src/app/app-routing.module';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n    MenuComponent\r\n  ],\r\n    imports: [\r\n      MaterialModule,AppRoutingModule,BrowserModule,MDBBootstrapModule.forRoot()\r\n    ],\r\n    providers: [],\r\n    bootstrap: [],\r\n    exports:[MenuComponent]\r\n\r\n  })\r\n  export class AppModuleMenu { }","import { NgModule } from '@angular/core';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { LoginService } from './services/login.service';\r\n\r\n@NgModule({\r\n    declarations: [\r\n    LoginComponent\r\n  ],\r\n    imports: [\r\n      AngularFireAuthModule,MaterialModule\r\n    ],\r\n    providers: [LoginService],\r\n    bootstrap: []\r\n  })\r\n  export class AppModuleAuth { }","import { Component, Inject, OnInit } from '@angular/core';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { from, Observable } from 'rxjs';\nimport { finalize, map, mergeMap } from 'rxjs/operators';\nimport { CategoriesService } from 'src/app/modules/common/services/categories.service';\nimport { StockService } from 'src/app/modules/common/services/stock.service';\nimport { Product } from '../../models/product.model';\nimport { ProductService } from '../../services/product.service';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n\n  \n\n  uploadPercent1: Observable<any>;\n  uploadPercent2: Observable<any>;\n  uploadPercent3: Observable<any>;\n  uploadPercent4: Observable<any>;\n  uploadPercent5: Observable<any>;\n  downloadURL: Observable<string>;\n\n  AllProducts: any[];\n  productKey:string;\n\n  pdtAddForm: FormGroup;\n  categories: any[];\n  product:Product;\n  stock: any[];\n\n  image1: string;\n  image2: string;\n  image3: string;\n  image4: string;\n  image5: string;\n\n  idProduct: any;\n\n  constructor(private fb: FormBuilder, private categorieService: CategoriesService,\n    private productService: ProductService, private activeRouter: ActivatedRoute,\n    private storage: AngularFireStorage, private router : Router,\n    private stockService: StockService ) { \n\n      this.pdtAddForm = this.fb.group({\n        'title': [null, Validators.required],\n        'description': [null, Validators.required],\n        'pdtdimensions': [null, Validators.required],\n        'stock': [null, Validators.required],\n        'price': [null, Validators.required],\n        'categorie': [null, Validators.required],\n        'urlImage1': [null, Validators.required],\n        'urlImage2': [null ], 'urlImage3': [null ],'urlImage4': [null ], 'urlImage5': [null ],\n        'bullet1':[null],'bullet2':[null],'bullet3':[null],'bullet4':[null]\n      })  \n\n  }\n\n  ngOnInit() {\n\n\nthis.idProduct= this.activeRouter.snapshot.params['id'];\n\n    \n    if(!this.idProduct){\n      this.categorieService.getAllCategories()\n      .subscribe(categorie=>{\n            this.categories=categorie;\n            console.log(categorie);\n            this.initalizeProduct(null);\n      })\n    }\n    else\n    {\n      this.categorieService.getAllCategories()\n                            .pipe(\n                              mergeMap(categories=> this.productService.getProductById(this.idProduct).pipe(\n                                map(product=>{\n                                  return ([categories,product])\n                                })\n                              ))).subscribe(([categories,product])=>{\n                                this.categories=categories as any[];\n                                this.product=product as Product;\n                                this.AllProducts=[product];\n                                this.initalizeProduct(product);\n\n                              })\n    }\n\n    this.stockService.getStock()\n                      .subscribe(stock=>this.stock=stock);\n    \n    \n    \n   \n    \n  }\n\n\n  initalizeProduct(product){\n    this.pdtAddForm = this.fb.group({\n      'title': [product?product.title:null, Validators.required],\n      'description': [product?product.description:null, Validators.required],\n      'pdtdimensions': [product?product.pdtdimensions:null, Validators.required],\n      'stock': [product?product.stock:null, Validators.required],\n      'price': [product?product.price:null, Validators.required],\n      'categorie': [product?product.categorie:null, Validators.required],\n      'urlImage1': [product?product.urlImage1:null, Validators.required],\n      'urlImage2': [product?product.urlImage2:null ],\n      'urlImage3': [product?product.urlImage3:null ],\n      'urlImage4': [product?product.urlImage4:null ],\n      'urlImage5': [product?product.urlImage5:null ],\n      'bullet1':[product?product.bullet1:null],\n      'bullet2':[product?product.bullet2:null],\n      'bullet3':[product?product.bullet3:null],\n      'bullet4':[product?product.bullet4:null]\n    })\n  }\n\n  \n\n  AddProduct(form){\n    console.log(form);\n    if(this.pdtAddForm.valid){\n     let product: Product={\n       id: this.idProduct?this.idProduct.id:'',\n       title: form.title,\n       description: form.description,\n       pdtdimensions: form.pdtdimensions,\n       stock: form.stock,\n       price: form.price,\n       categorie: form.categorie,\n       urlImage1 : form.urlImage1,\n       urlImage2 : form.urlImage2,\n       urlImage3 : form.urlImage3,\n       urlImage4 : form.urlImage4,\n       urlImage5 : form.urlImage5,\n       bullet1: form.bullet1,\n       bullet2: form.bullet2,\n       bullet3: form.bullet3,\n       bullet4: form.bullet4,\n      \n     }\n     if(!this.idProduct){\n       console.log(this.idProduct)\n      this.productService.AddProduct(product).then(()=>{\n        this.router.navigate(['/admin-products']);\n      })\n     }\n     else{\n      this.productService.updateProduct(product, this.idProduct).then(()=>{\n        this.router.navigate(['/admin-products']);\n      })\n     }\n    \n    }\n  }\n\n  onClear(){\n    this.pdtAddForm.setValue({\n      title: '',\n      description: '',\n      categorie: '',\n      price: '',\n      urlImage1: '',\n      urlImage2: '',\n      urlImage3: '',\n      urlImage4: '',\n      urlImage5: '',\n      bullet1: '',\n      bullet2: '',\n      bullet3:'',\n      bullet4: '',\n    })\n  }\n\n  //Image 1\n  uploadFile1(event) {\n    const file = event.target.files[0];\n    const filePath = file.name;\n    const fileRef = this.storage.ref(filePath);\n    const task = this.storage.upload(filePath, file);\n\n    // observe percentage changes\n    this.uploadPercent1 = task.percentageChanges();\n    // get notified when the download URL is available\n    task.snapshotChanges().pipe(\n        finalize(() =>{fileRef.getDownloadURL()\n                      .subscribe((url)=>{\n                        this.image1=url;\n                      })\n        }  )\n     )\n    .subscribe()\n  }\n\n  //Image 2\n  uploadFile2(event) {\n    const file = event.target.files[0];\n    const filePath = file.name;\n    const fileRef = this.storage.ref(filePath);\n    const task = this.storage.upload(filePath, file);\n\n    // observe percentage changes\n    this.uploadPercent2 = task.percentageChanges();\n    // get notified when the download URL is available\n    task.snapshotChanges().pipe(\n        finalize(() =>{fileRef.getDownloadURL()\n                      .subscribe((url)=>{\n                        this.image2=url;\n                      })\n        }  )\n     )\n    .subscribe()\n  }\n\n  //Image 3\n  uploadFile3(event) {\n    const file = event.target.files[0];\n    const filePath = file.name;\n    const fileRef = this.storage.ref(filePath);\n    const task = this.storage.upload(filePath, file);\n\n    // observe percentage changes\n    this.uploadPercent3 = task.percentageChanges();\n    // get notified when the download URL is available\n    task.snapshotChanges().pipe(\n        finalize(() =>{fileRef.getDownloadURL()\n                      .subscribe((url)=>{\n                        this.image3=url;\n                      })\n        }  )\n     )\n    .subscribe()\n  }\n\n  //Image 4\n  uploadFile4(event) {\n    const file = event.target.files[0];\n    const filePath = file.name;\n    const fileRef = this.storage.ref(filePath);\n    const task = this.storage.upload(filePath, file);\n\n    // observe percentage changes\n    this.uploadPercent4 = task.percentageChanges();\n    // get notified when the download URL is available\n    task.snapshotChanges().pipe(\n        finalize(() =>{fileRef.getDownloadURL()\n                      .subscribe((url)=>{\n                        this.image4=url;\n                      })\n        }  )\n     )\n    .subscribe()\n  }\n\n  //Image 5\n  uploadFile5(event) {\n    const file = event.target.files[0];\n    const filePath = file.name;\n    const fileRef = this.storage.ref(filePath);\n    const task = this.storage.upload(filePath, file);\n\n    // observe percentage changes\n    this.uploadPercent5 = task.percentageChanges();\n    // get notified when the download URL is available\n    task.snapshotChanges().pipe(\n        finalize(() =>{fileRef.getDownloadURL()\n                      .subscribe((url)=>{\n                        this.image5=url;\n                      })\n        }  )\n     )\n    .subscribe()\n  }\n\n\n\n}\n","\n<form [formGroup]=\"pdtAddForm\" (ngSubmit)=\"AddProduct(pdtAddForm.value)\">\n<mat-tab-group mat-align-tabs=\"center\" >\n    <mat-tab label=\"Product Info\">\n        <div class=\"pdtControls\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Title</mat-label>\n                <input matInput formControlName=\"title\"  required>\n                <mat-error>This field is Required</mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Product Dimensions</mat-label>\n                <input matInput formControlName=\"pdtdimensions\"   required>\n                <mat-error>This field is Required</mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Price</mat-label>\n                <input matInput formControlName=\"price\" required>\n                <mat-error>This field is Required</mat-error>\n            </mat-form-field>\n            \n            <mat-form-field  appearance=\"outline\" >\n                <mat-label>Stock</mat-label>\n                <mat-select formControlName=\"stock\" >\n                    <mat-option  *ngFor=\"let st of stock\" [value]=\"st.key\"> {{st.label}} </mat-option>\n                   \n                   \n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field  appearance=\"outline\" >\n                <mat-label>Categorie</mat-label>\n                <mat-select formControlName=\"categorie\" >\n                    <mat-option>Select Any</mat-option>\n                    <mat-option *ngFor=\"let categorie of categories\" [value]=\"categorie.key\"> {{categorie.label}} </mat-option>\n                   \n                </mat-select>\n            </mat-form-field>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Product Description\">\n        <div class=\"pdtControls\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Description</mat-label>\n                <input matInput formControlName=\"description\"  required>\n                <mat-error>This field is Required</mat-error>\n            </mat-form-field>\n\n            <!--Bullet Points-->\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Bullet Point 1</mat-label>\n                <input matInput formControlName=\"bullet1\">                \n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Bullet Point 2</mat-label>\n                <input matInput formControlName=\"bullet2\">\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Bullet Point 3</mat-label>\n                <input matInput formControlName=\"bullet3\"> \n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Bullet Point 4</mat-label>\n                <input matInput formControlName=\"bullet4\">  \n            </mat-form-field>\n\n        </div>\n       \n        \n    </mat-tab>\n    <mat-tab label=\"Product Images\">\n    \n            <div class=\"row\" >\n                <h3 class=\"h2 text-primary text-center\">Add Product Images</h3>\n                <div class=\"col-lg-4\" > <!--Column 1-->\n                 \n                    <!--Image 1-->\n                 <div>\n                 <input hidden matInput formControlName=\"urlImage1\"  [(ngModel)]=\"image1\" required>    \n                 \n                    <input type=\"file\"  (change)=\"uploadFile1($event)\" required />\n                    <p>{{ uploadPercent1 | async }}</p>        \n                    <img *ngIf=\"image1\" [src]=\"image1\" style=\"width: 100px; height: 100px; \"/>\n                 </div> \n                 \n                 <div *ngFor=\"let product of AllProducts\">\n                    <img *ngIf=\"!image1 \" [src]=\"product.urlImage1\" style=\"width: 100px; height: 100px; \"/>\n                 </div>\n                 \n                  <!--Image 2-->\n                  <div>\n                    <input hidden matInput formControlName=\"urlImage2\"  [(ngModel)]=\"image2\" >    \n                    \n                       <input type=\"file\" (change)=\"uploadFile2($event)\" />\n                       <p>{{ uploadPercent2 | async }}</p>        \n                       <img  *ngIf=\"image2\" [src]=\"image2\" style=\"width: 100px; height: 100px; \"/>\n                    </div> \n                     \n                    <div *ngFor=\"let product of AllProducts\">\n                        <img *ngIf=\"!image2\" [src]=\"product.urlImage2\" style=\"width: 100px; height: 100px; \"/>\n                    </div>\n                    \n\n                </div>\n                <div class=\"col-lg-4\"><!--Column 2-->\n\n                 <!--Image 3-->\n                 <div>\n                    <input hidden matInput formControlName=\"urlImage3\"  [(ngModel)]=\"image3\" >    \n                        \n                     <input type=\"file\" (change)=\"uploadFile3($event)\" />\n                    <p>{{ uploadPercent3 | async }}</p>        \n                    <img *ngIf=\"image3\" [src]=\"image3\" style=\"width: 100px; height: 100px; \"/>\n                    </div> \n                     \n                <div *ngFor=\"let product of AllProducts\">\n                     <img *ngIf=\"!image3\" [src]=\"product.urlImage3\" style=\"width: 100px; height: 100px; \"/>\n                </div>\n                <!--Image 4-->\n                <div>\n                    <input hidden matInput formControlName=\"urlImage4\"  [(ngModel)]=\"image4\" >    \n                    \n                       <input type=\"file\" (change)=\"uploadFile4($event)\" />\n                       <p>{{ uploadPercent4 | async }}</p>        \n                       <img *ngIf=\"image4\" [src]=\"image4\" style=\"width: 100px; height: 100px; \"/>\n                    </div>\n                     \n                    <div *ngFor=\"let product of AllProducts\">\n                        <img *ngIf=\"!image4\" [src]=\"product.urlImage4\" style=\"width: 100px; height: 100px; \"/>\n                   </div>\n                     \n                </div>\n\n                <div class=\"col-lg-4\"><!--Column 3-->\n                    <!--Image 5-->\n                 <div>\n                    <input hidden matInput formControlName=\"urlImage5\"  [(ngModel)]=\"image5\" >    \n                    \n                       <input type=\"file\" (change)=\"uploadFile5($event)\" />\n                       <p>{{ uploadPercent5 | async }}</p>        \n                       <img *ngIf=\"image5\" [src]=\"image5\" style=\"width: 100px; height: 100px; \"/>\n                    </div> \n                     \n                    <div *ngFor=\"let product of AllProducts\">\n                        <img *ngIf=\"!image5\" [src]=\"product.urlImage5\" style=\"width: 100px; height: 100px; \"/>\n                   </div>\n                    <!--Submit Button and Clear Button-->\n                    <div class=\"buttonrow\">\n                        <button mdbBtn type=\"submit\" color=\"deep-purple\" mdbWavesEffect  [disabled]=\"!pdtAddForm.valid\"  >Submit</button>\n                        <button mdbBtn type=\"button\" color=\"amber\" mdbWavesEffect (click)=\"onClear()\">Clear</button>\n                    </div>\n\n                </div>\n            </div>\n\n        \n        \n    </mat-tab>\n    \n  </mat-tab-group>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <div class=\"container-fulid\">\n<div class=\"card\">\n    <div class=\"row\">\n        <div class=\"col-lg-8\">\n            <div class=\"card-body form\">\n               \n          <h2 class=\"mt-4\"><mdb-icon fas icon=\"envelope\" class=\"pr-2\"></mdb-icon>Write to us:</h2>\n                <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Your Name</mat-label>\n                            <input matInput placeholder=\"Your Name\">\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-lg-6\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Email</mat-label>\n                            <input type=\"email\" matInput formControl=\"emailFormControl\" placeholder=\"Ex. pat@example.com\">\n                          </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Your Mobile</mat-label>\n                            <input matInput placeholder=\"Your Mobile\">\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-lg-6\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Your Location</mat-label>\n                            <input matInput placeholder=\"Your Location\">\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Your Message</mat-label>\n                            <textarea matInput placeholder=\"Your Message\"></textarea>\n                        </mat-form-field\n                        <div class=\"modal-footer d-flex\">\n                            <button mdbBtn color=\"unique\" class=\"waves-light\" mdbWavesEffect>Send\n                              <mdb-icon far icon=\"paper-plane\" class=\"ml-1\"></mdb-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-4\">\n            <div class=\"card-body contact text-center h-100 white-text light-blue darken-4\">\n                <h1 class=\"my-4 pb-2\">Contact Information</h1>\n                <ul class=\"text-lg-left list-unstyled ml-4\">\n                    <li>\n                        <p><mdb-icon fas icon=\"map-marked\" class=\"pr-2\"></mdb-icon><br>\n                        House No: 2-96/1 <br>\n                        Village: Pachunoor <br>\n                        Mandal: Manakondur <br>\n                        District: Karimnagar <br>\n                        Telangana State <br>\n                        PinCode: 505505\n                        </p>\n                    </li>\n                    <li>\n                        <p><mdb-icon fas icon=\"phone\" class=\"pr-2\"></mdb-icon>\n                        7702961696, 9177638532\n                    </p>\n                    </li>\n                    <li>\n                        <p><mdb-icon fas icon=\"envelope\" class=\"pr-2\"></mdb-icon>\n                            mamathagifts@gmail.com\n                        </p>\n                    </li>\n                </ul>\n\n            </div>\n        </div>\n        \n    </div>\n</div>\n</div> -->\n<div class=\"container-fuild text-center z-depth-2\">\n    <li class=\"nav-item\">\n        <a class=\"nav-link waves-effect\" routerLink=\"/about\" >About</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link waves-effect\" routerLink=\"/contactus\" >Contact Us</a>\n      </li>\n    <p class=\"text-center\">Copyrights@2021-22 by MamathaGifts</p>\n</div>\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models/user.model';\nimport { userReg } from '../models/userReg.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n  saveUser(user){\n    if(!user) return;\n    this.db.object('/user/'+user.uid).update({\n      name: user.displayName,\n      email: user.email\n    })\n\n  }\n  getUserById(uid:string){\n  return  this.db.object('/user/'+uid)\n            .snapshotChanges()\n            .pipe(\n              map(user=>{\n                let objectUser:any = user.payload.val();\n                objectUser.id=user.payload.key;\n                return objectUser\n              })\n            )\n  }\n\n  getUserByIdAddress(uid:string){\n    return  this.db.object('/user/'+uid+'/address/')\n                  .snapshotChanges()\n                  .pipe(\n                    map(user=>{\n                      return user.payload.val();\n                    })\n       \n                    )\n    }\n\n    getUserByIdReg(uid:string){\n      return  this.db.object('/user/'+uid+'/registration/')\n                    .snapshotChanges()\n                    .pipe(\n                      map(user=>{\n                        return user.payload.val();\n                      })\n         \n                      )\n      }\n\n    \n\n      \n\n\n  AddUser(user: User){\n    return this.db.list('user').push({\n      fullname: user.fullname,\n      mobile: user.mobile,\n      email: user.email,\n      addressline1: user.addressline1,\n      addressline2: user.addressline2,\n      pinCode: user.pinCode,\n      state: user.state,\n    })\n  }\n\n\n  updateUser(user: User){\n    return this.db.object('/user/'+user.id+'/address/').update({\n      fullname: user.fullname,\n      mobile: user.mobile,\n      email: user.email,\n      addressline1: user.addressline1,\n      addressline2: user.addressline2,\n      pinCode: user.pinCode,\n      state: user.state,\n    })\n\n  }\n\n  userReg(userReg: userReg){\n    return this.db.list('/user/'+userReg.id+'/registration/').push({\n      firstname: userReg.firstname,\n      lastname: userReg.lastname,\n      gender: userReg.gender,\n      email: userReg.email,\n      mobile: userReg.mobile,\n      \n    })\n  }\n\n  updateUserReg(userReg: userReg){\n    return this.db.object('/user/'+userReg.id+'/registration/').update({\n      firstname: userReg.firstname,\n      lastname: userReg.lastname,\n      gender: userReg.gender,\n      email: userReg.email,\n      mobile: userReg.mobile,\n      \n    })\n\n  }\n  \n  \n \n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs/operators'\nimport { Product } from '../models/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n\nproductList : AngularFireList<any>\n  constructor(private db: AngularFireDatabase, private activeRouter: ActivatedRoute) { }\n\n  getAllProducts(){\n  return  this.db.list('products').snapshotChanges()\n                            .pipe(\n                              map(changes=>\n                                changes.map(c => (\n                                  {\n                                    key: c.payload.key, ...c.payload.exportVal()\n                                  }\n                                ))\n                            ))\n      }\n      \n\n      \n      getProduct(key){\n        return this.db.object('/products/'+key)\n        .snapshotChanges()\n        .pipe(\n          map(c => (\n              {\n                key: c.payload.key, ...c.payload.exportVal()\n              }\n            ))\n        )\n      }\n\n       getProductStock( stock){\n        return this.db.object('/products/'+stock)\n        .snapshotChanges()\n        .pipe(\n          map(c => (\n              {\n                key: c.payload.key, ...c.payload.exportVal()\n              }\n            ))\n        )\n            }\n     \n           \n        \n\n      AddProduct(product:Product)\n      {\n        return this.db.list('/products/').push({\n         title:product.title,\n         description:product.description,\n         pdtdimensions:product.pdtdimensions,\n         stock:product.stock,\n         categorie:product.categorie,\n         price:product.price,\n         urlImage1: product.urlImage1,\n         urlImage2: product.urlImage2,\n         urlImage3: product.urlImage3,\n         urlImage4: product.urlImage4,\n         urlImage5: product.urlImage5,\n         bullet1: product.bullet1,\n         bullet2: product.bullet2,\n         bullet3: product.bullet3,\n         bullet4: product.bullet4\n        })\n      }\n\n    \n  getProductById(uid:string){\n  return  this.db.object('/products/'+uid)\n            .snapshotChanges()\n            .pipe(\n              map(product=>{\n                let obj:any=product.payload.val();\n                let productTemp:Product={\n                  id: product.key,\n                  title: obj.title,\n                  description: obj.description,\n                  pdtdimensions: obj.pdtdimensions,\n                  stock: obj.stock,\n                  price: obj.price,\n                  categorie: obj.categorie,\n                  urlImage1: obj.urlImage1,\n                  urlImage2: obj.urlImage2,\n                  urlImage3: obj.urlImage3,\n                  urlImage4: obj.urlImage4,\n                  urlImage5: obj.urlImage5,\n                  bullet1: obj.bullet1,\n                  bullet2: obj.bullet2,\n                  bullet3: obj.bullet3,\n                  bullet4: obj.bullet4,\n         \n                }\n                return productTemp\n              })\n            )\n\n  }\n\n  updateProduct(product:Product, id){\n  return  this.db.object('/products/'+id).update({\n      title: product.title,\n      description: product.description,\n      pdtdimensions:product.pdtdimensions,\n      stock:product.stock,\n      price: product.price,\n      categorie: product.categorie,\n      urlImage1: product.urlImage1,\n      urlImage2: product.urlImage2,\n      urlImage3: product.urlImage3,\n      urlImage4: product.urlImage4,\n      urlImage5: product.urlImage5,\n      bullet1: product.bullet1,\n      bullet2: product.bullet2,\n      bullet3: product.bullet3,\n      bullet4: product.bullet4\n    })\n  }\n\n  updatStock(keys,stock){\n this.db.list('/products/').update(keys,{inventory: stock })\n  }\n\n  deleteProduct(id:string){\n    this.db.object('/products/'+id).remove();\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { LoginService } from '../../auth/services/login.service';\nimport { UsersService } from '../../users/services/users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService  {\n\n  constructor(private loginService: LoginService, private userService: UsersService, private router: Router) { }\n\n  canActivate(){\n  return  this.loginService.getCurrentUserDb()\n                      .pipe(\n                        map(user=>{\n                          if(!user) return false;\n                          if(user.isAdmin) return true;\n                          this.router.navigate(['/login']);\n                          return false;\n                        })\n                      )\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { LoginService } from 'src/app/modules/auth/services/login.service';\nimport { UsersService } from '../../services/users.service';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  userDetails: any[];\n  userAddress: any[];\n  address:number=0;\n  user:any;\n  constructor(private userService: UsersService, private loginService: LoginService,\n    private router: Router ) { }\n\n  ngOnInit() {\n    \n    this.loginService.getCurrentUserDb()\n                      .pipe(\n                        mergeMap(userDb=>this.userService.getUserByIdReg(userDb.id).pipe(\n                          mergeMap(userDetails=>this.userService.getUserByIdAddress(userDb.id).pipe(\n                            map(address=>[userDb,userDetails,address])\n                          ))))).subscribe(([userDb,userDetails,address])=>{\n                            this.user=userDb;\n                            this.userDetails=[userDetails];\n                            this.userAddress=[address];\n                            console.log(this.userAddress)\n                          })\n\n  }\n\n  updateReg(){\n    this.router.navigate(['/user-registration'])\n  }\n\n  updateAddress(){\n    \n      this.router.navigate(['/user-info'])\n    \n  }\n\n  \n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-6\" *ngFor=\"let reg of userDetails\">\n      \n      <mdb-card>        \n        <mdb-card-body>\n          <h3 class=\"h1 text-info text-center\">Personal Information</h3>\n          <!--Text-->\n         <p><span>First Name:</span></p>\n         <mat-form-field appearance=\"outline\">\n          <input matInput disabled [value]=\"reg.firstname\">\n         </mat-form-field>\n         <p><span>Last Name:</span></p>\n         <mat-form-field appearance=\"outline\">\n          <input matInput disabled [value]=\"reg.lastname\">\n         </mat-form-field>\n         <p><span>Gender:</span></p>\n         <mat-form-field appearance=\"outline\">\n          <input matInput disabled [value]=\"reg.gender\">\n         </mat-form-field>\n         <p><span>E-mail:</span></p>\n         <mat-form-field appearance=\"outline\">\n          <input matInput disabled [value]=\"reg.email\">\n         </mat-form-field>\n         <p><span>Mobile:</span></p>\n         <mat-form-field appearance=\"outline\">\n          <input matInput disabled [value]=\"reg.mobile\">\n         </mat-form-field>\n         <p>\n         <button mdbBtn type=\"button\" color=\"pink\" (click)=\"updateReg()\" mdbWavesEffect>Upadate</button>\n        </p>\n        </mdb-card-body>\n      </mdb-card>\n    </div>\n    <div class=\"col-sm-6\" *ngFor=\"let ad of userAddress\">\n       <button *ngIf=\"!user.address\" mdbBtn type=\"button\" color=\"pink\" (click)=\"updateAddress()\" mdbWavesEffect>Add Address</button>\n      <mdb-card *ngIf=\"user.address\">        \n        <mdb-card-body> \n          <h3 class=\"h1 text-info text-center\">Address</h3>\n          <div class=\"row\">\n            <div class=\"col-lg-6\">\n              <p><span>Name:</span></p>\n         <mat-form-field appearance=\"outline\">\n          <input matInput disabled [value]=\"ad.fullname\">\n         </mat-form-field>\n         <p><span>Mobile:</span></p>\n         <mat-form-field appearance=\"outline\">\n          <input matInput disabled [value]=\"ad.mobile\">\n         </mat-form-field>\n         <p><span>E-mail:</span></p>\n         <mat-form-field appearance=\"outline\">\n          <input matInput disabled [value]=\"ad.email\">\n         </mat-form-field>\n            </div>\n            <div class=\"col-lg-6\">\n              <p><span>Address:</span></p>\n              <mat-form-field appearance=\"outline\">\n               <input matInput disabled [value]=\"ad.addressline1\">\n              <!-- </mat-form-field><br>\n              <mat-form-field appearance=\"outline\"> -->\n               <input matInput disabled *ngIf=\"ad.addressline2\" [value]=\"ad.addressline2\">\n              </mat-form-field>\n              <p><span>PinCode:</span></p>\n              <mat-form-field appearance=\"outline\">\n               <input matInput disabled [value]=\"ad.pinCode\">\n              </mat-form-field>\n              <p><span>State:</span> </p>\n              <mat-form-field appearance=\"outline\">\n               <input matInput disabled [value]=\"ad.state\">\n              </mat-form-field>\n            </div>\n          </div>     \n         <p>\n         <button mdbBtn type=\"button\" color=\"pink\" (click)=\"updateAddress()\" mdbWavesEffect>Update</button>\n        </p>\n        </mdb-card-body>\n      </mdb-card>\n    </div>\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  firebaseConfig : {\n    apiKey: \"AIzaSyAm88D3HQkopap3QYMa-TOJxAFkcQFCIv0\",\n    authDomain: \"mamathagifts-19.firebaseapp.com\",\n    databaseURL: \"https://mamathagifts-19-default-rtdb.firebaseio.com\",\n    projectId: \"mamathagifts-19\",\n    storageBucket: \"mamathagifts-19.appspot.com\",\n    messagingSenderId: \"93139023761\",\n    appId: \"1:93139023761:web:7b1068a9b2d67e9bfe4c30\",\n    measurementId: \"G-VGFT75TKXB\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map, mergeMap, switchMap } from 'rxjs/operators';\nimport { LoginComponent } from 'src/app/modules/auth/components/login/login.component';\nimport { LoginService } from 'src/app/modules/auth/services/login.service';\nimport { ProductService } from 'src/app/modules/product/services/product.service';\nimport { ShoppingCartService } from '../../services/shopping-cart.service';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit {\n\n  productsShopping: any[];\n  user:any;\n  userId;\n  Product:any;\n  allProducts: any[];\n  stock: any[];\n  instock='In Stock';\n  isLoading = false;\n\n  nbrShoppingProduct:number=0;\n  displayedColumns: string[] = ['title', 'urlImage', 'price','stock','actions'];\n  constructor(private shoppingService: ShoppingCartService, private router: Router,\n    private loginService: LoginService,private dialog: MatDialog,\n    private activeRouter: ActivatedRoute, private productService: ProductService) { }\n\n  ngOnInit(){\n    this.isLoading =true;\n    this.productService.getAllProducts()\n                        .subscribe(allProducts=>{\n                          this.isLoading = false;\n                          this.allProducts=allProducts;\n                        })\n    this.userId = this.activeRouter.snapshot.params['id'];\n\n    this.shoppingService.getListItemsShoppingCartMapProducts(this.userId)\n                        .subscribe(products=>{\n                          this.productsShopping=products;\n                          this.Product=products;\n                          console.log(products)\n                        })\n    \n    this.loginService.getCurrentUserDb()\n                        .subscribe(user=>this.user=user);\n                        this.loginService.getCurrentUser()\n                        .pipe(\n                          switchMap(user=>{\n                            if(!user) return 'e';\n                            return this.loginService.getCurrentUserDb();\n                          }),\n                          mergeMap(userDb=>this.shoppingService.getListItemsShoppingCart(userDb.id).pipe(\n                            map(productsShopping=>{\n                              return [userDb,productsShopping]\n                            })\n                          ))\n                        )\n                        .subscribe(([userDb,productsShopping])=>{\n                          if(userDb!='e'){                            \n                            this.nbrShoppingProduct=(productsShopping as any[]).length;\n                            console.log(this.nbrShoppingProduct)\n                            this.user=userDb;\n                          } \n                            \n                          else\n                          this.user=null\n                        }, erreur=> console.log);\n  }\n\n  getProductsByKey(key){\n    \n    return this.allProducts.filter(product=>product.key==key);\n\n  }\n  \n  \n  getTotal()\n  {\n    let total:number=0;\n    if(!this.productsShopping) return total;\n    this.productsShopping.forEach(product=>{\n      total = total+ + product.price;\n    })\n    return total;\n  }\n\n  Delete(row){\n\n    this.shoppingService.deleteProductShoppingCart(this.userId, row.key); \n    \n    if(this.nbrShoppingProduct<=0){\n      this.router.navigate(['/empty-cart']);\n    }\n  }\n  \n  Products(){\n    this.router.navigate(['/products']);\n  }\n \n \n  Details(key){\n    this.router.navigate(['/product-details', key]);\n  }\n\n  OnNext(){\n    if(!this.user){\n      this.dialog.open(LoginComponent); \n    }\n    if(!this.user.address){\n      this.router.navigate(['/user-address']);\n    }\n    else{\n      this.router.navigate(['/cart-orders']);\n    }\n    \n  }\n\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<div class=\"container-fulid\" *ngIf=\"(nbrShoppingProduct != 0) && !isLoading\">\n  <h1 class=\" text-center text-secondary\">Shopping Cart</h1>\n<div *ngFor=\"let pdt of Product\">\n\n<table mat-table [dataSource]=\"getProductsByKey(pdt.key)\" class=\"mat-elevation-z8 demo-table\">\n    <!-- Title Column -->\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef>Title</th>\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 10%;\">{{element.title}}</td>\n    </ng-container>\n  \n    <!-- Description Column \n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 40%;\">{{element.description}}</td>\n    </ng-container>-->\n\n  \n    <!-- UrlImage Column -->\n    <ng-container matColumnDef=\"urlImage\">\n      <th mat-header-cell *matHeaderCellDef>Image</th>\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 5%;\"><img [src]=\"element.urlImage1\" (click)=\"Details(element.key)\" ></td>\n    </ng-container>\n\n    <!-- Price Column -->\n    <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef>Price</th>\n        <td mat-cell *matCellDef=\"let element\" style=\"width: 5%;\">{{element.price | currency:\"INR\"}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"stock\">\n      <th mat-header-cell *matHeaderCellDef>Stock</th>\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 5%;\">\n        <p *ngIf=\"(element.stock === 'In Stock')\" class=\"text-success\">{{element.stock}}</p>\n        <p *ngIf=\"(element.stock === 'Out Of Stock')\" class=\"text-danger\">{{element.stock}}</p>\n      </td>\n  </ng-container>\n    \n    \n\n      <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef>Actions </th>\n        <td mat-cell *matCellDef=\"let row\" style=\"width: 5%;\">\n            \n         <button mat-icon-button matTooltip=\"Click to Delete\" class=\"iconbutton\" color=\"warn\" (click)=\"Delete(row)\">\n          <mat-icon aria-label=\"Delete\">delete</mat-icon>\n        </button>\n        \n        </td>\n      </ng-container>\n  \n    <!--  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>--> \n\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n</div>\n\n <mat-card class=\"example-card \" *ngIf=\"!isLoading\">\n    <mat-card-header>\n      <mat-card-title class=\"card-container-left\">Total : {{getTotal() | currency: 'INR'}} </mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n    </mat-card-content>\n    <mat-card-actions>\n      <button *ngIf=\"getTotal() > 0\"   mdbBtn type=\"button\" gradient=\"aqua\"   mdbWavesEffect\n        data-mdb-ripple-color=\"dark\" (click)=\"OnNext()\" >Next</button>\n        <div *ngFor=\"let pdt of Product\">\n          <!--\n        <p *ngFor=\"let st of getProductsByKey(pdt.key)\">\n          <button *ngIf=\"(st.stock === 'Out Of Stock')\"   mdbBtn type=\"button\" gradient=\"aqua\"   mdbWavesEffect\n            data-mdb-ripple-color=\"dark\"  >Next</button>\n        </p>-->\n        </div>\n        \n    </mat-card-actions>\n</mat-card>\n\n</div><!--Container-->\n\n<div class=\"container text-center\" *ngIf=\"(nbrShoppingProduct == 0) && !isLoading\">\n  <p class=\"h3 text-danger m-4\">Your Cart is Empty</p>\n\n  <img src=\"/assets/Delivery/cart.png\" />\n     \n  <br><br>\n  <div>\n       <button type=\"button\" (click)=\"Products()\"\n       mdbBtn type=\"button\" gradient=\"blue\"  mdbWavesEffect> Shop Now</button>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ourproducts',\n  templateUrl: './ourproducts.component.html',\n  styleUrls: ['./ourproducts.component.css']\n})\nexport class OurproductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"text-center\">Products</h1>\n<!--Our Products-->\n\n<div class=\"container-fluid\">\n    \n    <div class=\"row\">\n      <div class=\"col-lg-4\">\n        <div class=\"view overlay zoom wow fadeInLeft\" data-wow-delay=\"0.3s\">\n         <figure class=\"figure\">\n            <img src=\"/assets/Photos/Rock-Photo1.jpg\" class=\"figure-img img-fluid rounded z-depth-2\"\n                 alt=\"...\" style=\"width: 400px\">\n         </figure>\n        </div>\n      </div>\n      <div class=\"col-lg-4\">\n        <div class=\"view overlay zoom wow fadeInDown\" data-wow-delay=\"0.5s\">\n            <figure class=\"figure\">\n               <img src=\"/assets/Photos/GlassCup1.jpg\" class=\"figure-img img-fluid rounded z-depth-2\"\n                    alt=\"...\" style=\"width: 400px\">\n            </figure>\n           </div>       \n      </div>\n      <div class=\"col-lg-4\">\n        <div class=\"view overlay zoom wow fadeInRight\" data-wow-delay=\"0.7s\">\n            <figure class=\"figure\">\n               <img src=\"/assets/Photos/BlueCup1.jpg\" class=\"figure-img img-fluid rounded z-depth-2\"\n                    alt=\"...\" style=\"width: 400px\">\n            </figure>\n           </div>          \n      </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-lg-4\">\n          <div class=\"view overlay zoom wow fadeInLeft\" data-wow-delay=\"0.3s\">\n           <figure class=\"figure\">\n              <img src=\"/assets/Photos/Glass-BL38-2.jpg\" class=\"figure-img img-fluid rounded z-depth-2\"\n                   alt=\"...\" style=\"width: 400px\">\n           </figure>\n          </div>\n        </div>\n        <div class=\"col-lg-4\">\n          <div class=\"view overlay zoom wow fadeInUp\" data-wow-delay=\"0.5s\">\n              <figure class=\"figure\">\n                 <img src=\"/assets/Photos/Puzzle-Rect2.png\" class=\"figure-img img-fluid rounded z-depth-2\"\n                      alt=\"...\" style=\"width: 400px;height: 300px;\">\n              </figure>\n             </div>       \n        </div>\n        <div class=\"col-lg-4\">\n          <div class=\"view overlay zoom wow fadeInRight\" data-wow-delay=\"0.7s\">\n              <figure class=\"figure\">\n                 <img src=\"/assets/Photos/LedFrame1.jpg\" class=\"figure-img img-fluid rounded z-depth-2\"\n                      alt=\"...\" style=\"width: 400px; height: 300px;\">\n              </figure>\n             </div>          \n        </div>\n      </div>\n  </div>\n \n\n<!--Our Products-->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","\n\n  <!--Main Navigation -->\n<header class=\"intro-header\">\n\n  <section class=\"view intro-2\">\n    <div class=\"full-bg-img mask rgba-gradient\">\n      <div class=\"container flex-center\">\n        <div class=\"d-flex align-items-center content-height w-100\">\n          <div class=\"flex-center pt-5 mt-3 w-100\">\n            <div class=\" text-center text-md-left mb-5\">\n              <div class=\"text-center\">\n                <h2 class=\" display-1 font-bold wow fadeInDown\" data-wow-delay=\"0.3s\">Mamatha Gifts</h2>\n                \n                <h6 class=\"h6 wow fadeInLeft\" data-wow-delay=\"0.4s\">We are Printing Photos on Mugs, \n                 <br> Glass Frames, Stone Frames, Pillows ... etc</h6>\n                <br>\n                <a mdbBtn color=\"white\"  gradient=\"aqua\" [rounded]=\"true\"  \n                class=\" wow fadeInRight waves-light\" data-wow-delay=\"0.5s\"\n                  mdbWavesEffect routerLink=\"/products\">View Products</a>\n              </div>\n            </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n  </section>\n\n</header>\n<!--Main Navigation-->\n\n<app-ourproducts></app-ourproducts>\n<app-our-services></app-our-services>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\nimport { LoginService } from 'src/app/modules/auth/services/login.service';\nimport { User } from '../../models/user.model';\nimport { UsersService } from '../../services/users.service';\n\n@Component({\n  selector: 'app-user-address',\n  templateUrl: './user-address.component.html',\n  styleUrls: ['./user-address.component.css']\n})\nexport class UserAddressComponent implements OnInit {\n  userForm: FormGroup;\n  \n  userid: any;\n  Address: any[];\n  user: any;\n  constructor(private formBulider: FormBuilder, private loginService: LoginService,\n    private userService: UsersService, private router: Router,\n    private activeRouter: ActivatedRoute) {\n      this.userForm= this.formBulider.group({\n        fullname: [null, [Validators.required, Validators.minLength(6)]],\n        mobile: [null, [Validators.required, Validators.minLength(10)]],\n        email:[null,[Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n        addressline1: [null, Validators.required],\n        addressline2: [null],\n        pinCode: [null, [Validators.required,Validators.maxLength(6)]],\n        state: [null, Validators.required]\n  \n      })\n     }\n\n  ngOnInit() {\n    this.loginService.getCurrentUser()\n    .pipe(\n      switchMap(user=>{\n        console.log(user);\n        if(!user) return 'e';\n        return this.loginService.getCurrentUserDb();\n      }),\n     map(userDb=>{\n       return [userDb]\n     })\n    )\n    .subscribe(([userdb]) =>{\n      if(userdb!= 'e') \n      {\n        \n        this.user=userdb\n      }\n      else\n      this.user=null;\n    }, errur=> console.log );     \n\n\n    \n    \n    this.userService.getUserByIdAddress(this.userid)\n                    .subscribe(address=>{\n                      this.Address=[address];\n                      console.log(address)\n                    })\n  }\n\n  \n  initalizeUser(user){\n    this.userForm= this.formBulider.group({\n      fullname: [user?user.fullname:null, [Validators.required, Validators.minLength(6)]],\n      mobile: [user?user.mobile:null, [Validators.required, Validators.minLength(10),Validators.maxLength(10)]],\n      email:[user?user.email:null,[Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n      addressline1: [user?user.addressline1:null, Validators.required],\n      addressline2: [user?user.addressline2:null],\n      pinCode: [user?user.pinCode:null,  [Validators.required,Validators.maxLength(6),Validators.minLength(6)]],\n      state: [user?user.state:null, Validators.required]\n\n    })\n\n  }\n\n \n  get fullname(){\n    return this.userForm.get('fullname');\n  }\n  get mobile(){\n    return this.userForm.get('mobile');\n  }\n  get email(){\n    return this.userForm.get('email');\n  }\n  get pinCode(){\n    return this.userForm.get('pinCode')\n  }\n\n  AddUser(form){\n    console.log(form);\n    if(this.userForm.valid){\n      let user: User={\n        id: this.user.id,\n        fullname: form.fullname,\n        mobile: form.mobile,\n        email: form.email,\n        addressline1: form.addressline1,\n        addressline2: form.addressline2,\n        pinCode: form.pinCode,\n        state: form.state\n\n      }\n      if(!this.user){\n        this.userService.AddUser(user).then(()=>{\n        this.router.navigate(['/cart-orders']);\n        })\n      }\n      else{\n        this.userService.updateUser(user).then(()=>{\n          this.router.navigate(['/cart-orders']);\n        })\n      }\n      \n    }\n\n  }\n\n  Cancle(){\n    this.router.navigate(['/']);\n  }\n\n}\n","\n<form [formGroup]=\"userForm\" (ngSubmit)=\"AddUser(userForm.value)\">\n    <mat-grid-list cols=\"2\" rowHeight=\"400px\">\n    <mat-grid-tile>\n        <div class=\"empControls\">\n           \n            <mat-form-field appearance=\"outline\">\n                <mat-label>FullName</mat-label>\n                <input matInput formControlName=\"fullname\" required>\n                <mat-error *ngIf=\"fullname.errors?.required\">This field is Required</mat-error>\n                <mat-error *ngIf=\"fullname.errors?.minlength\">Min 6 Charecter are Required</mat-error>\n            </mat-form-field>\n    \n            \n            <mat-form-field appearance=\"outline\">\n                <mat-label>Email</mat-label>\n                <input matInput formControlName=\"email\" required>\n                <mat-error *ngIf=\"email.errors?.required\">This field is Required</mat-error>\n                <mat-error *ngIf=\"email.errors?.pattern\">Enter Currect Email</mat-error>\n            </mat-form-field>\n           \n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Mobile</mat-label>\n                <input matInput formControlName=\"mobile\" required [class.is-invalid]=\"mobile.valid && mobile.touched\" required>\n                <mat-error *ngIf=\"userForm.controls['mobile'].errors?.required\">This field is Required</mat-error>\n                <mat-error *ngIf=\"userForm.controls['mobile'].errors?.minlength\">Min 10 Numbers are Required</mat-error>\n                <mat-error *ngIf=\"userForm.controls['mobile'].errors?.maxlength\">Max 10 Numbers are Required</mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Pincode</mat-label>\n                <input matInput formControlName=\"pinCode\" required>\n                <mat-error *ngIf=\"pinCode.errors?.required\">This field is Required</mat-error>\n                <mat-error *ngIf=\"pinCode.errors?.minlength\">Min 6 Numbers are Required</mat-error>\n                <mat-error *ngIf=\"pinCode.errors?.maxlength\">Max 6 Numbers are Required</mat-error>\n            </mat-form-field>\n\n    \n        </div>\n    </mat-grid-tile>\n    <mat-grid-tile>\n        <div class=\"empControls\">\n            \n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Address Line 1</mat-label>\n                    <input matInput formControlName=\"addressline1\" required>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Address Line 2</mat-label>\n                    <input matInput formControlName=\"addressline2\">\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>State</mat-label>\n                    <input matInput formControlName=\"state\" required>\n                </mat-form-field>  \n                \n                \n                <div class=\"buttonrow\">\n                    <button  mdbBtn type=\"submit\" gradient=\"blue\"  mdbWavesEffect\n                    data-mdb-ripple-color=\"dark\">Submit</button>\n                    <a mdbBtn type=\"button\" color=\"danger\" mdbWavesEffect\n                    data-mdb-ripple-color=\"dark\"   (click)=\"Cancle()\" >Cancle</a>\n                </div>\n    \n        </div>\n    \n        \n    </mat-grid-tile>\n    </mat-grid-list>\n    \n    </form>\n   \n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { AppModuleProduct } from '../product/app.module';\r\nimport { AddProductComponent } from '../product/components/add-product/add-product.component';\r\nimport { AdminProductsComponent } from './components/admin-products/admin-products.component';\r\nimport { AllOrdersComponent } from './components/all-orders/all-orders.component';\r\nimport { OrderDetailsComponent } from './components/order-details/order-details.component';\r\nimport { WavesModule, TableModule, IconsModule } from 'angular-bootstrap-md';\r\nimport { OrderSortPipe } from './Pipes/order-sort.pipe';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n@NgModule({\r\n    declarations: [\r\n    AdminProductsComponent,\r\n    AllOrdersComponent,\r\n    OrderDetailsComponent,\r\n    OrderSortPipe,\r\n  ],\r\n    imports: [\r\n      MaterialModule,CommonModule,BrowserAnimationsModule, AppModuleProduct, RouterModule,\r\n      ReactiveFormsModule, FormsModule, WavesModule,TableModule,IconsModule,\r\n      MDBBootstrapModule.forRoot()\r\n    ],\r\n    providers: [],\r\n    bootstrap: [],\r\n    exports:[AdminProductsComponent, AllOrdersComponent],\r\n    entryComponents:[AddProductComponent]\r\n  })\r\n  export class AppModuleAdmin { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactus',\n  templateUrl: './contactus.component.html',\n  styleUrls: ['./contactus.component.css']\n})\nexport class ContactusComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fulid\">\n    <div class=\"card\">\n        <div class=\"row\">\n            <div class=\"col-lg-8\">\n                <div class=\"card-body form\">\n                    <!-- Header -->\n              <h2 class=\"mt-4\"><mdb-icon fas icon=\"envelope\" class=\"pr-2\"></mdb-icon>Write to us:</h2>\n                    <div class=\"row\">\n                        <div class=\"col-lg-6\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label>Your Name</mat-label>\n                                <input matInput placeholder=\"Your Name\">\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label>Email</mat-label>\n                                <input type=\"email\" matInput formControl=\"emailFormControl\" placeholder=\"Ex. pat@example.com\">\n                              </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-lg-6\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label>Your Mobile</mat-label>\n                                <input matInput placeholder=\"Your Mobile\">\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label>Your Location</mat-label>\n                                <input matInput placeholder=\"Your Location\">\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label>Your Message</mat-label>\n                                <textarea matInput placeholder=\"Your Message\"></textarea>\n                            </mat-form-field>\n                            <!-- <button mdbBtn type=\"button\" color=\"warning\" [rounded]=\"true\" mdbWavesEffect>Send</button> -->\n                            <div class=\"modal-footer d-flex\">\n                                <button mdbBtn color=\"unique\" class=\"waves-light\" mdbWavesEffect>Send\n                                  <mdb-icon far icon=\"paper-plane\" class=\"ml-1\"></mdb-icon>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-lg-4\">\n                <div class=\"card-body contact text-center h-100 white-text light-blue darken-4\">\n                    <h1 class=\"my-4 pb-2\">Contact Information</h1>\n                    <ul class=\"text-lg-left list-unstyled ml-4\">\n                        <li>\n                            <p><mdb-icon fas icon=\"map-marked\" class=\"pr-2\"></mdb-icon><br>\n                            House No: 2-96/1 <br>\n                            Village: Pachunoor <br>\n                            Mandal: Manakondur <br>\n                            District: Karimnagar <br>\n                            Telangana State <br>\n                            PinCode: 505505\n                            </p>\n                        </li>\n                        <li>\n                            <p><mdb-icon fas icon=\"phone\" class=\"pr-2\"></mdb-icon>\n                            7702961696, 9177638532\n                        </p>\n                        </li>\n                        <li>\n                            <p><mdb-icon fas icon=\"envelope\" class=\"pr-2\"></mdb-icon>\n                                mamathagifts@gmail.com\n                            </p>\n                        </li>\n                    </ul>\n    \n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-empty-cart',\n  templateUrl: './empty-cart.component.html',\n  styleUrls: ['./empty-cart.component.css']\n})\nexport class EmptyCartComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  Products(){\n    this.router.navigate(['/products']);\n  }\n}\n","\n\n<div class=\"container text-center\">\n      <p class=\"h3 text-danger m-4\">Your Cart is Empty</p>\n\n      <img src=\"/assets/Delivery/cart.png\" />\n         \n      <br><br>\n      <div>\n           <button type=\"button\" (click)=\"Products()\"\n           mdbBtn type=\"button\" gradient=\"blue\"  mdbWavesEffect> Shop Now</button>\n      </div>\n</div>\n      \n\n\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { map, take } from 'rxjs/operators';\nimport { LoginService } from '../../auth/services/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingCartService {\n\n  constructor(private db: AngularFireDatabase, private loginService: LoginService) { }\n\n async AddToCart(cartId,Product){\n   \n    //let cartId=localStorage.getItem('cartId');\n    //let cartId= this.loginService.getCurrentUserDb();\n    if(!cartId){\n      let cart = await this.db.list('/shoppingCart/').push({\n        dateCreated: new Date().getTime()\n      });\n\n      //localStorage.setItem('cartId', cart.key!);\n      this.AddProductCart(cart.key, Product)\n      \n\n    }\n    else\n    {\n      this.AddProductCart(cartId, Product)\n    }\n    \n\n  }\n\n  AddProductCart(idCart, ProductAdd)\n  {\n  \n    this.db.object('/shoppingCart/'+idCart+'/items/'+ProductAdd.key)\n            .snapshotChanges()\n            .pipe(\n              take(1)\n            ).subscribe(\n              productCart=>{\n                \n                if(!productCart.key){\n                 \n                  this.db.list('/shoppingCart/'+idCart+'/items/').set(ProductAdd.key, {Product: ProductAdd});\n                }\n                \n              }\n            )\n  }\n\n\n  getListItemsShoppingCart(cartId){\n    //let cartId = localStorage.getItem('cartId');\n    return this.db.list('/shoppingCart/'+cartId+'/items/')\n                  .snapshotChanges()\n                  .pipe(\n                    map(products =>\n                      products.map( c =>({\n                        key: c.payload.key, ...c.payload.exportVal()\n                      }))\n                  ))\n\n  }\n\n  deleteProductShoppingCart(cartId,id:string){\n    //let cartId= localStorage.getItem('cartId');\n    return this.db.object('/shoppingCart/'+cartId+'/items/'+id).remove();\n  }\n\n  getListItemsShoppingCartMapProducts(cartId)\n  {\n    //let cartId=localStorage.getItem('cartId');\n   return this.db.list('/shoppingCart/'+cartId+'/items/')\n            .snapshotChanges()\n            .pipe(\n\n              map(products =>\n                products.map(c => (\n                           { \n                            \n                             key: c.payload.key, ...(c.payload.val() as any).Product\n                           }\n                           ))\n            ))\n\n   \n  }\n  getProductIdByUserId(userId)\n   {\n     return this.db.list('/shoppingCart/'+userId+'/items/')\n                                             .snapshotChanges()\n                                             .pipe(\n                                               map(idOrders=>{\n                                                 return idOrders.map(ids=>{\n                                                   return ids.key;\n                                                 })\n                                               })\n                                             )\n   }\n\n  clearShoppingCart(cartId){\n    //let cartId = localStorage.getItem('cartId');\n    this.db.object('/shoppingCart/'+cartId+'/items/').remove();\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { HeaderComponent } from './components/header/header.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n    HeaderComponent\r\n  ],\r\n    imports: [\r\n  \r\n    ],\r\n    providers: [],\r\n    bootstrap: [],\r\n    exports:[HeaderComponent]\r\n  })\r\n  export class AppModuleHeader { }","<h1 class=\"h2 text-success\">Your order has been received</h1>\n\n<h1 style=\"color: red;\">Thanks you your purchase</h1>\n\n<p>Reference for your order is <span>{{orderId}}</span> </p>\n\n<div class=\"container\">\n \n        <div class=\"row\">\n          <div class=\"col-sm-4\" *ngFor=\"let pdt of sucessorder\">\n            <mdb-card class=\"z-depth-2\">\n              <!--Card image-->\n              <mdb-card-img class=\"zoom overly\" [src]=\"pdt.urlImage1\" alt=\"Card image cap\"></mdb-card-img>\n              <!--Card content-->\n              <mdb-card-body>\n                <mdb-card-title> <h4>{{pdt.title}}</h4> </mdb-card-title>\n                <mdb-card-text> <span>Size:</span>{{pdt.pdtdimensions}} </mdb-card-text>\n                <mdb-card-text> {{pdt.price | currency:\"INR\"}} </mdb-card-text>\n              </mdb-card-body>\n            </mdb-card>\n          </div>\n        </div>\n     <br> <br><br>\n      <button type=\"button\" (click)=\"Products()\"\n      mdbBtn type=\"button\" gradient=\"blue\"  mdbWavesEffect>Contunue Shopping</button>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrderService } from '../../services/order.service';\n\n\n@Component({\n  selector: 'app-sucess-order',\n  templateUrl: './sucess-order.component.html',\n  styleUrls: ['./sucess-order.component.css']\n})\nexport class SucessOrderComponent implements OnInit {\n\n  orderId;\n  sucessorder: any;\n  \n  constructor(private activeRouter: ActivatedRoute, private orderService: OrderService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.orderId = this.activeRouter.snapshot.params['id'];\n\n    this.orderService.getProductByIdOrder(this.orderId)\n                      .subscribe(order=>{\n                        this.sucessorder= order\n                      });\n  }\n  Products(){\n    this.router.navigate(['/products']);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormBuilder, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BreadcrumbModule, MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { UserInfoComponent } from './components/user-info/user-info.component';\r\n\r\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\r\nimport { UserAddressComponent } from './components/user-address/user-address.component';\r\nimport { DateSortPipe } from './Pipe/date-sort.pipe';\r\nimport { UserRegistrationComponent } from './components/user-registration/user-registration.component';\nimport { UserOrdersComponent } from './components/user-orders/user-orders.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n    UserInfoComponent,\r\n\r\n    UserProfileComponent,\r\n      UserAddressComponent,\r\n      DateSortPipe,\r\n      UserRegistrationComponent,\r\n      UserOrdersComponent,\r\n      \r\n      \r\n  ],\r\n    imports: [\r\n      MaterialModule, ReactiveFormsModule, FormsModule, CommonModule, BreadcrumbModule, BrowserAnimationsModule, \r\n      BrowserModule, MDBBootstrapModule.forRoot()\r\n  \r\n    ],\r\n    providers: [],\r\n    bootstrap: [],\r\n    exports:[UserInfoComponent]\r\n  })\r\n  export class AppModuleUsers { }","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { map, mergeMap, switchMap } from 'rxjs/operators';\nimport { LoginComponent } from 'src/app/modules/auth/components/login/login.component';\nimport { LoginService } from 'src/app/modules/auth/services/login.service';\nimport { ShoppingCartService } from 'src/app/modules/shoppingCart/services/shopping-cart.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  user:any;\n  nbrShoppingProduct:number=0;\n  constructor(private loginService: LoginService, private shoppingCartService: ShoppingCartService,\n    private router: Router, private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.loginService.getCurrentUser()\n                      .pipe(\n                        switchMap(user=>{\n                          if(!user) return 'e';\n                          return this.loginService.getCurrentUserDb();\n                        }),\n                        mergeMap(userDb=>this.shoppingCartService.getListItemsShoppingCart(userDb.id).pipe(\n                          map(productsShopping=>{\n                            return [userDb,productsShopping]\n                          })\n                        ))\n                      )\n                      .subscribe(([userDb,productsShopping])=>{\n                        if(userDb!='e'){\n                          this.nbrShoppingProduct=(productsShopping as any[]).length;\n                          this.user=userDb;\n                        } \n                          \n                        else\n                        this.user=null\n                      }, erreur=> console.log);\n  }\n  login(){\n    this.dialog.open(LoginComponent);\n  }\n\n\n  logout(){\n    this.loginService.logoutWithGoogle().then(()=>{\n      this.router.navigate(['/']);\n    })    \n  }\n\n\n  Orders(){\n    this.router.navigate(['/user-orders', this.user.id]);\n  }\n\n  recapShopping(){\n    if(!this.user){\n      this.dialog.open(LoginComponent); \n    }\n  //  else if(this.nbrShoppingProduct<=0){\n  //   this.router.navigate(['/empty-cart']);\n  //  }\n    else{\n      this.router.navigate(['/shopping-cart', this.user.id]);\n    }\n  }\n  MyProfile(){\n    if(!this.user.registration){\n      this.router.navigate(['/user-registration']);\n    }\n    else{\n      this.router.navigate(['/user-profile']);\n    }\n  }\n\n}\n","<!-- Navbar -->\n<nav class=\"navbar navbar-expand-lg navbar-light bg-white fixed\">\n    <div class=\"container-fluid\">\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-mdb-toggle=\"collapse\"\n        data-mdb-target=\"#navbarExample01\"\n        aria-controls=\"navbarExample01\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <i class=\"fas fa-bars\"></i>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarExample01\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li class=\"nav-item active\">\n            <a class=\"nav-link waves-effect\" aria-current=\"page\" routerLink=\"/\" >Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link waves-effect\" routerLink=\"/products\">Products</a>\n          </li>\n       \n          <li class=\"nav-item\">\n            <a class=\"nav-link waves-effect\" routerLink=\"/about\" >About</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link waves-effect\" routerLink=\"/contactus\" >Contact Us</a>\n          </li>\n          <!-- <li class=\"nav-item\">\n            <a mat-button (click)=\"recapShopping()\"> {{nbrShoppingProduct}}  <i class=\"material-icons  waves-effect\"> add_shopping_cart</i></a>\n          </li> -->\n          <!-- <div class=\"left\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link waves-effect\" *ngIf=\"!user\"  (click)=\"login()\" >Login</a>\n            </li>\n            <li class=\"nav-item\">            \n              <a class=\"nav-link waves-effect\" [matMenuTriggerFor]=\"Menu\" *ngIf=\"user\" >{{user.name}}</a>\n              <mat-menu #Menu=\"matMenu\">\n                  <button mat-menu-item (click)=\"MyProfile()\"  >MyProfile</button>                  \n                  <button mat-menu-item (click)=\"Orders()\" >Orders</button>\n                  <button mat-menu-item *ngIf=\"user && user.isAdmin\" routerLink=\"/admin-products\">Admin Products</button>\n                  <button mat-menu-item *ngIf=\"user && user.isAdmin\" routerLink=\"/all-orders\">All Orders</button>\n                  <button mat-menu-item class=\"text-danger\" (click)=\"logout()\" >LogOut</button>\n              </mat-menu>\n            </li>\n          </div> -->\n        </ul>\n        <li class=\"nav-item\">\n          <a mat-button (click)=\"recapShopping()\"> {{nbrShoppingProduct}}  <i class=\"material-icons  waves-effect\"> add_shopping_cart</i></a>\n        </li>\n        <button type=\"button\" mdbBtn color=\"warning\" class=\"waves-light\"\n        *ngIf=\"!user\"  (click)=\"login()\"  mdbWavesEffect>LogIn </button>\n        <button type=\"button\" mdbBtn color=\"warning\" *ngIf=\"user\" class=\"waves-light dropdown-toggle dropdown-toggle-split px-3 waves-light\"\n        [matMenuTriggerFor]=\"Menu\" mdbWavesEffect mdbDropdownToggle>{{user.name}} </button>\n          <!-- <button type=\"button\" mdbDropdownToggle mdbBtn color=\"info\" class=\"dropdown-toggle dropdown-toggle-split px-3 waves-light\"\n            mdbWavesEffect ></button> -->\n            <mat-menu #Menu=\"matMenu\">\n              <button mat-menu-item (click)=\"MyProfile()\"  >MyProfile</button> \n              <button mat-menu-item (click)=\"Orders()\" >Orders</button>\n              <button mat-menu-item *ngIf=\"user && user.isAdmin\" routerLink=\"/admin-products\">Admin Products</button>\n              <button mat-menu-item *ngIf=\"user && user.isAdmin\" routerLink=\"/all-orders\">All Orders</button>\n              <button mat-menu-item (click)=\"logout()\" >LogOut</button>\n          </mat-menu>\n      </div>\n    </div>\n  </nav>\n  <!-- Navbar -->\n  \n","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { OrdersComponent } from './components/orders/orders.component';\r\nimport { SucessOrderComponent } from './components/sucess-order/sucess-order.component';\nimport { CartOrdersComponent } from './components/cart-orders/cart-orders.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n    OrdersComponent,\r\n    SucessOrderComponent,\r\n    CartOrdersComponent\r\n  ],\r\n    imports: [\r\n      MaterialModule, ReactiveFormsModule, FormsModule, BrowserModule, BrowserAnimationsModule,\r\n      MDBBootstrapModule.forRoot()\r\n    ],\r\n    providers: [],\r\n    bootstrap: [],\r\n    exports:[OrdersComponent]\r\n  })\r\n  export class AppModuleOrders{ }","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n  getAllCategories(){\n    return  this.db.list('categorie')\n                  .snapshotChanges()\n                  .pipe(\n                    map(change =>change.map(c=>({\n                     key: c.payload.key, ...c.payload.exportVal()\n                    })))\n                  )\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Gifts';\n}\n","<app-header></app-header>\n\n<div class=\"container-fluid\">\n    <app-menu></app-menu>\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"container\">\n    <h3 class=\"h1 text-success text-center\" >About</h3>\n    <p class=\"about text-center\">\n        We are Printing Photos on Mugs, Stones Frames, Glass Frames, Pillows, ...etc\n    </p>\n    \n    \n    <div class=\"row mt-5\">\n        <div class=\"col-sm-6\">\n            <img src=\"/assets/Delivery/freed.jpg\" class=\"figure-img img-fluid\"\n                  alt=\"...\" style=\"width: 400px;height: 300px;\">\n            <!-- <figure class=\"figure\">\n                <img src=\"/assets/Delivery/freed.jpg\" class=\"figure-img img-fluid z-depth-1\"\n                  alt=\"...\" style=\"width: 400px;height: 200px;\">\n            </figure> -->\n        </div>\n        <div class=\"col-sm-6\">\n            <h3 class=\"h1 text-center text-danger\">Free Shipping</h3>\n            <p class=\"shipping text-center\">We Provide Free Shipping to All Products</p>\n        </div>\n    </div>\n    <div class=\"row mt-5\">\n        <div class=\"col-sm-6\">\n            <h3 class=\"h1 text-center text-danger\">COD</h3>\n            <p class=\"shipping text-center\">We Provide Cash On Delivery to All Products</p>\n        </div>\n        <div class=\"col-sm-6\">\n            <img src=\"/assets/Delivery/cashondelivery1.jpg\" class=\"figure-img img-fluid\"\n                  alt=\"...\" style=\"width: 400px;height: 300px;\">\n        </div>\n    </div>\n\n</div>\n","import { RowContext } from '@angular/cdk/table';\nimport { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { MDBModalRef, MDBModalService, MdbTableDirective, MdbTablePaginationComponent } from 'angular-bootstrap-md';\nimport { Subscription } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { CategoriesService } from 'src/app/modules/common/services/categories.service';\nimport { AddProductComponent } from 'src/app/modules/product/components/add-product/add-product.component';\nimport { ProductService } from 'src/app/modules/product/services/product.service';\n\n@Component({\n  selector: 'app-admin-products',\n  templateUrl: './admin-products.component.html',\n  styleUrls: ['./admin-products.component.css']\n})\nexport class AdminProductsComponent implements OnInit {\n\n  products: any[];\n  categories: any[]\n  searchKey:string;\n  sub: Subscription;\n  \n  @ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective;\n  @ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n  @ViewChild('row', { static: true }) row: ElementRef;\n\n  elements: any = [];\n  headElements = ['title', 'categorie', 'urlImage', 'price', 'stock','actions'];\n  modalRef: MDBModalRef;\n\n\n\n  displayedColumns: string[] = ['title','categorie','urlImage','price','stock','actions'];\n  constructor(private productService: ProductService,\n    private categorieService: CategoriesService, private router: Router,\n    private cdRef: ChangeDetectorRef,) { }\n\n  ngOnInit() {\n\n    this.sub=this.categorieService.getAllCategories()\n    .pipe(\n      mergeMap(categories=>this.productService.getAllProducts().pipe(\n        map(products=>[categories,products])\n        \n      ))).subscribe(([categories,products])=>{\n        this.categories=categories;\n        this.products=products;\n        this.elements=products;\n      });\n\n\n      //Bootstrap Table\n\n      for (let i = 1; i <= 25; i++) {\n        this.elements.push({title: i.toString(), categorie: 'categorie ' + i, urlImage: 'urlImage ' + i, price: 'price ' + i, stock: 'stock ' + i, actions: 'actions ' + i});\n      }\n  \n      this.mdbTable.setDataSource(this.elements);\n      this.elements = this.mdbTable.getDataSource();\n  }\n\n  ngAfterViewInit() {\n    this.mdbTablePagination.setMaxVisibleItemsNumberTo(5);\n\n    this.mdbTablePagination.calculateFirstItemIndex();\n    this.mdbTablePagination.calculateLastItemIndex();\n    this.cdRef.detectChanges();\n  }\n  \n  \n\n\n\n\n\n  AddProduct(){\n   // this.dialog.open(AddProductComponent, { width: \"100%\"});\n   this.router.navigate(['/add-product']);\n  }\n\n  Edit(key){\n    this.router.navigate(['/add-product', key]);\n  }\n  Delete(key){\n      if(window.confirm('Are you sure to Delete the Product ?')) this.productService.deleteProduct(key);\n  }\n\n\n\n}\n","<div class=\"demo-button-container\">\n    <button  mdbBtn type=\"button\" color=\"cyan\" mdbWavesEffect (click)=\"AddProduct()\">\n      Add Product\n    </button>\n  </div>\n\n  \n\n  \n  <!--\n  <table mat-table [dataSource]=\"products\" class=\"mat-elevation-z8 demo-table\" matSort>\n    \n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef>Title</th>\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">{{element.title}}</td>\n    </ng-container>\n  \n   \n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">{{element.description}}</td>\n    </ng-container>\n  \n    \n    <ng-container matColumnDef=\"categorie\">\n      <th mat-header-cell *matHeaderCellDef>Categorie</th>\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">{{element.categorie}}</td>\n    </ng-container>\n  \n    \n    <ng-container matColumnDef=\"urlImage\">\n      <th mat-header-cell *matHeaderCellDef>UrlImage</th>\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\"><img [src]=\"element.urlImage1\"></td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef>Price</th>\n        <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">{{element.price | currency:'INR'}}</td>\n      </ng-container>\n\n     \n    <ng-container matColumnDef=\"stock\">\n      <th mat-header-cell *matHeaderCellDef>Stock</th>\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">{{element.stock}}</td>\n     \n    </ng-container>\n\n      <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef>Actions </th>\n        <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n                <button mat-icon-button matTooltip=\"Click to Edit\" class=\"iconbutton\" color=\"primary\" (click)=\"Edit(row.key)\">\n                        <mat-icon aria-label=\"Edit\" >edit</mat-icon>\n                      </button>\n                    <button mat-icon-button matTooltip=\"Click to Delete\" class=\"iconbutton\" color=\"warn\" (click)=\"Delete(row)\">\n                        <mat-icon aria-label=\"Delete\">delete</mat-icon>\n               </button>\n        </td>\n      </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n  </table>\n--> \n\n<div class=\"container table-responsive z-depth-2\">\n  <div class=\"row\">\n    <table mdbTable #tableEl=\"mdbTable\" [stickyHeader]=\"true\" [hover]=\"true\" >\n      <thead class=\"sticky-top\">\n      <tr>\n        <th *ngFor=\"let head of headElements; let i = index\" [mdbTableSort]=\"elements\"\n            [sortBy]=\"headElements[i]\"\n            scope=\"col\">{{head | titlecase}}\n          <mdb-icon fas icon=\"sort\"></mdb-icon>\n        </th>\n      </tr>\n      </thead>\n      <tbody #row>\n      <tr *ngFor=\"let el of elements; let i = index\">\n        <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\"\n          style=\"width: 15%;\" >{{el.title}}\n        </td>\n        <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n          {{el.categorie}}\n        </td>\n        <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n          <img [src]=\"el.urlImage1\" />\n        </td>\n        <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n          {{el.price}}\n        </td>\n        <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n        <p *ngIf=\"(el.stock === 'In Stock')\" class=\"text-success\">{{el.stock}}</p>\n        <p *ngIf=\"(el.stock === 'Out Of Stock')\" class=\"text-danger\">{{el.stock}}</p>\n        </td>\n        <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n          <button mdbBtn color=\"warning\" size=\"sm\" mdbWavesEffect (click)=\"Edit(el.key)\">Edit</button>\n          <button mdbBtn color=\"danger\" size=\"sm\" mdbWavesEffect (click)=\"Delete(el.key)\">Remove</button>\n        </td>\n      </tr>\n      </tbody>\n      <tfoot class=\"grey lighten-5 w-100\">\n      <tr>\n        <td colspan=\"5\">\n          <mdb-table-pagination [tableEl]=\"tableEl\" paginationAlign=\"\"\n                                [searchDataSource]=\"elements\"></mdb-table-pagination>\n        </td>\n      </tr>\n      </tfoot>\n    </table>\n  </div>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dateSort'\n})\nexport class DateSortPipe implements PipeTransform {\n\n  transform(value: Array<string>, args: any[]): any {\n\n\n    const sortField = args[0];\n    const sortDirection = args[1];\n    let multiplier = 1;\n\n    if (sortDirection === 'des'){\n      multiplier = -1;\n    }\n\n\n    value.sort((a: any, b: any) => {\n      if (a[sortField] < b[sortField]){\n        return -1 * multiplier;\n      }\n      else if(a[sortField] > b[sortField]){\n        return 1 * multiplier\n      }\n      else{\n        return 0\n      }\n    })\n    return value;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n//Firebase \nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\n\nimport { environment } from '../environments/environment';\n\n//Modules\nimport { AppModuleAdmin } from './modules/admin/app.module';\nimport { AppModuleAuth } from './modules/auth/app.module';\nimport { AppModuleCommon } from './modules/common/app.module';\nimport { AppModuleMenu } from './modules/menu/app.module';\nimport { AppModuleOrders } from './modules/orders/app.module';\nimport { AppModulePayment } from './modules/payment/app.module';\nimport { AppModuleProduct } from './modules/product/app.module';\nimport { AppModuleShoppingCart } from './modules/shoppingCart/app.module';\nimport { AppModuleUsers } from './modules/users/app.module';\nimport { MaterialModule } from './material.module';\nimport { AppModuleFooter } from './modules/footer/app.module';\nimport { AppModuleHeader } from './modules/header/app.module';\nimport { CommonModule } from '@angular/common';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SwiperModule } from 'swiper/angular';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { HttpClientModule} from '@angular/common/http';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { ShoppingCartService } from './modules/shoppingCart/services/shopping-cart.service';\nimport { ProductService } from './modules/product/services/product.service';\nimport { OrderService } from './modules/orders/services/order.service';\nimport { LoginService } from './modules/auth/services/login.service';\nimport { AdminService } from './modules/admin/services/admin.service';\nimport { UsersService } from './modules/users/services/users.service';\nimport { AppModulePipes } from './modules/Pipes/app.module';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n   \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    SwiperModule,\n    //Firebase\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule,AngularFireStorageModule,AngularFireAuthModule,\n    \n    //App Modules\n    AppModuleAdmin,AppModuleAuth,AppModuleCommon,AppModuleFooter,AppModuleHeader,\n    AppModuleMenu,AppModuleOrders,AppModulePayment,AppModulePipes,\n    AppModuleProduct,AppModuleShoppingCart,AppModuleUsers,\n    MaterialModule,ReactiveFormsModule,FormsModule,MDBBootstrapModule.forRoot(),\n    HttpClientModule, NgxGalleryModule\n\n  ],\n  providers: [ShoppingCartService,ProductService,OrderService,LoginService,AdminService,UsersService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Observable, Subscription } from 'rxjs';\nimport { map, mergeMap, switchMap } from 'rxjs/operators';\nimport { LoginComponent } from 'src/app/modules/auth/components/login/login.component';\nimport { LoginService } from 'src/app/modules/auth/services/login.service';\nimport { OrderService } from 'src/app/modules/orders/services/order.service';\nimport { ShoppingCartService } from 'src/app/modules/shoppingCart/services/shopping-cart.service';\nimport { UserInfoComponent } from 'src/app/modules/users/components/user-info/user-info.component';\nimport { Product } from '../../models/product.model';\n\nimport { ProductService } from '../../services/product.service';\n\n\n\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  \n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n\n  productkey;\n  Product: any[];\n  \n  categories: any[];\n  sub: Subscription;\n  productShoppingCart:any[];\n\n  user: any;\n  User: any[];\n  userid: any;\n  Stock:any[];\n  outofstock='Out Of Stock';\n  isLoading =false;\n \n  \n  constructor(private productService: ProductService,private shoppingCartService: ShoppingCartService,\n     private activeRouter: ActivatedRoute, private loginService: LoginService,\n     private router: Router, private orderService: OrderService, private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.isLoading =true;\n    this.productkey= this.activeRouter.snapshot.params['id'];\n\n      this.productService.getProduct(this.productkey)\n                          .subscribe(products =>{\n                            this.isLoading =false;\n                            this.Product= [products];\n                          \n                          }) \n\n      this.productService.getProduct(this.productkey)\n                          .pipe(\n                            mergeMap(products=>this.productService.getProductStock(products.stock).pipe(\n                              map(stock=>[products,stock])\n                            ))).subscribe(([products,stock])=>{\n                              console.log(stock);\n                              this.Stock=[stock];\n                            })\n /*\n      this.shoppingCartService.getListItemsShoppingCart()\n                              .subscribe(shoppingCart=>{\n                                this.productShoppingCart=shoppingCart;\n                                console.log(shoppingCart);\n                              })\n      \n     \n      this.productService.getProduct(this.productkey)\n                          .pipe(\n                            mergeMap(product=>this.shoppingCartService.getListItemsShoppingCart().pipe(\n                              map(shoppingCart=>[product,shoppingCart])\n                            ))).subscribe(([product,shoppingCart])=>{\n                              this.Product=[product];\n                              this.productShoppingCart=[shoppingCart];\n                            })*/\n\n\n      this.loginService.getCurrentUserDb()\n                        .subscribe(user=>{\n                          this.user=user;\n                          this.User=[user];\n                        });\n  \n                        this.loginService.getCurrentUser()\n                        .pipe(\n                          switchMap(user=>{\n                            console.log(user);\n                            if(!user) return 'e';\n                            return this.loginService.getCurrentUserDb();\n                          }),\n                         map(userDb=>{\n                           return [userDb]\n                         })\n                        )\n                        .subscribe(([userdb]) =>{\n                          if(userdb!= 'e') \n                          {\n                            \n                            this.user=userdb\n                          }\n                          else\n                          this.user=null;\n                        }, errur=> console.log ); \n  }\n\n\n  AddToCart(Product,id){\n   console.log(Product,id)\n    this.shoppingCartService.AddToCart(id,Product);\n  }\n  NotUser(){\n    if(!this.user){\n      this.dialog.open(LoginComponent); \n    }\n  }\n\n  async BuyNow(){\n    if(!this.user){\n      this.dialog.open(LoginComponent); \n    }\n    \n    else if(!this.user.address)\n    {\n      this.router.navigate(['/user-info', this.productkey ])\n      \n    }\n    else\n    {\n      this.router.navigate(['/orders', this.productkey ])\n    }\n    \n \n  }\n  existProductInShoppingCart(key):boolean\n  {\n   return this.productShoppingCart.find((product:any)=>product.key==key) \n  }\n\n  existProductStock(key):boolean\n  {\n   return this.Stock.find((stock:any)=>stock.key==key) \n  }\n \n  login(){\n  }\n    \n    \n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<div class=\"container-fluid\" *ngIf=\"!isLoading\">\n    <div class=\"row\" *ngFor=\"let pdt of Product\" >\n     \n        <div class=\"col-lg-6\"  >\n         <!--\n            <div id=\"carouselExampleCrossfade\"\n            class=\"carousel slide carousel-fade\"\n            data-mdb-ride=\"carousel\" >\n            <div class=\"carousel-indicators\">\n              <button \n                type=\"button\" \n                data-mdb-target=\"#carouselExampleCrossfade\"\n                data-mdb-slide-to=\"0\"\n                class=\"active\"\n                aria-current=\"true\"\n                aria-label=\"Slide 1\"\n              ></button>\n              <button *ngIf=\"pdt.urlImage2\" \n                type=\"button\"\n                data-mdb-target=\"#carouselExampleCrossfade\"\n                data-mdb-slide-to=\"1\"\n                aria-label=\"Slide 2\"\n              ></button>\n              <button *ngIf=\"pdt.urlImage3\" \n                type=\"button\"\n                data-mdb-target=\"#carouselExampleCrossfade\"\n                data-mdb-slide-to=\"2\"\n                aria-label=\"Slide 3\"\n              ></button>\n              <button *ngIf=\"pdt.urlImage4\" \n                type=\"button\"\n                data-mdb-target=\"#carouselExampleCrossfade\"\n                data-mdb-slide-to=\"3\"\n                aria-label=\"Slide 4\"\n              ></button>\n              <button *ngIf=\"pdt.urlImage5\" \n                type=\"button\"\n                data-mdb-target=\"#carouselExampleCrossfade\"\n                data-mdb-slide-to=\"4\"\n                aria-label=\"Slide 5\"\n              ></button>\n            </div>\n            <div class=\"carousel-inner\">\n              <div class=\"carousel-item active view overlay zoom\" data-mdb-interval=\"3000\">\n                <img \n                  [src]=\"pdt.urlImage1\"\n                  class=\"d-block w-100 \"\n                  alt=\"...\"\n                />\n              </div>\n              <div class=\"carousel-item view overlay zoom\" *ngIf=\"pdt.urlImage2\" data-mdb-interval=\"3000\">\n                <img \n                  [src]=\"pdt.urlImage2\"\n                  class=\"d-block w-100\"\n                  alt=\"...\"\n                />\n              </div>\n              <div class=\"carousel-item view overlay zoom\" *ngIf=\"pdt.urlImage3\" data-mdb-interval=\"3000\">\n                <img \n                  [src]=\"pdt.urlImage3\"\n                  class=\"d-block w-100\"\n                  alt=\"...\"\n                />\n              </div>\n              <div class=\"carousel-item view overlay zoom\" *ngIf=\"pdt.urlImage4\" data-mdb-interval=\"3000\">\n                <img \n                  [src]=\"pdt.urlImage4\"\n                  class=\"d-block w-100\"\n                  alt=\"...\"\n                />\n              </div>\n              <div class=\"carousel-item view overlay zoom\" *ngIf=\"pdt.urlImage5\" data-mdb-interval=\"3000\">\n                <img \n                  [src]=\"pdt.urlImage5\"\n                  class=\"d-block w-100\"\n                  alt=\"...\"\n                />\n              </div>\n             \n\n            </div>\n            <button *ngIf=\"pdt.urlImage2 && pdt.urlImage3 && pdt.urlImage4 && pdt.urlImage5\"\n              class=\"carousel-control-prev\"\n              type=\"button\"\n              data-mdb-target=\"#carouselExampleCrossfade\"\n              data-mdb-slide=\"prev\"\n            >\n              <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Previous</span>\n            </button>\n            <button *ngIf=\"pdt.urlImage2 && pdt.urlImage3 && pdt.urlImage4 && pdt.urlImage5\"\n              class=\"carousel-control-next\"\n              type=\"button\"\n              data-mdb-target=\"#carouselExampleCrossfade\"\n              data-mdb-slide=\"next\"\n            >\n              <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Next</span>\n            </button>\n          </div>-->\n      \n          <mdb-carousel class=\"carousel slide carousel-fade\" [animation]=\"'fade'\" [isControls]=\"true\" [interval]=\"3000\">\n            <mdb-carousel-item *ngIf=\"pdt.urlImage1\" class=\"zoom overly\">\n              <img class=\"d-block w-100\"  [src]=\"pdt.urlImage1\" alt=\"First slide\">\n            </mdb-carousel-item>\n            <mdb-carousel-item *ngIf=\"pdt.urlImage2\" class=\"zoom overly\">\n              <img class=\"d-block w-100\"  [src]=\"pdt.urlImage2\" alt=\"Second slide\">\n            </mdb-carousel-item>\n            <mdb-carousel-item *ngIf=\"pdt.urlImage3\" class=\"zoom overly\">\n              <img class=\"d-block w-100\"  [src]=\"pdt.urlImage3\" alt=\"Third slide\">\n            </mdb-carousel-item>\n            <mdb-carousel-item *ngIf=\"pdt.urlImage4\" class=\"zoom overly\">\n              <img class=\"d-block w-100\"  [src]=\"pdt.urlImage4\" alt=\"Fouth slide\">\n            </mdb-carousel-item>\n            <mdb-carousel-item *ngIf=\"pdt.urlImage5\" class=\"zoom overly\">\n              <img class=\"d-block w-100\"  [src]=\"pdt.urlImage5\" alt=\"Fifth slide\">\n            </mdb-carousel-item>\n          </mdb-carousel>\n\n\n        </div>\n        <div class=\"col-lg-6\">\n            <div class=\"\">\n              <p class=\"card-title h5 text-info\" > {{pdt.title}} </p>\n                \n              \n              <div id=\"price\" > \n                <p> <span>Price:</span>  {{pdt.price | currency:'INR'}}</p>    \n              </div>\n\n              <p class=\"text-danger h6\"> FREE Delivery</p>\n\n              <div id=\"size\" > \n                <p> <span>Size:</span> {{pdt.pdtdimensions}}</p>    \n             </div>\n\n             <div id=\"stock\" *ngFor=\"let st of Stock\"> \n              <p class=\"text-success\" *ngIf=\"!existProductStock(outofstock)\"> {{pdt.stock}}</p> \n              <p class=\"text-danger\" *ngIf=\"existProductStock(outofstock)\"> {{pdt.stock}}</p>    \n            </div>\n\n                <div id=\"description\" > \n                  <span>Description</span> <br><br>\n                  <p>{{pdt.description}}</p>\n                </div>\n                <div id=\"bullets\" *ngIf=\"pdt.bullet1\">\n                  <span>About This Item</span> <br><br>\n                  <p *ngIf=\"pdt.bullet1\">{{pdt.bullet1}}</p> \n                  <p *ngIf=\"pdt.bullet2\">{{pdt.bullet2}}</p>\n                  <p *ngIf=\"pdt.bullet3\">{{pdt.bullet3}}</p>\n                  <p *ngIf=\"pdt.bullet4\">{{pdt.bullet4}}</p>\n                </div>\n            </div>\n        \n              <p *ngFor=\"let cartId of User\">\n                <a class=\"btn btn-warning btn-rounded\"  *ngIf=\"(pdt.stock === 'In Stock')\"\n                (click)=\"AddToCart(pdt, cartId.id)\"   data-mdb-ripple-color=\"dark\">Add to Cart</a>\n              </p>\n                <a class=\"btn btn-warning btn-rounded\"  *ngIf=\"!user && (pdt.stock === 'In Stock')\"\n              (click)=\"NotUser()\" data-mdb-ripple-color=\"dark\">Add to Cart</a>\n\n              <a   mdbBtn type=\"button\" gradient=\"aqua\"   mdbWavesEffect   (click)=\"BuyNow()\" \n              *ngIf=\"(pdt.stock === 'In Stock')\" data-mdb-ripple-color=\"dark\">Buy Now</a>\n           <a   mdbBtn type=\"button\" class=\"btn btn-danger btn-rounded\"   mdbWavesEffect\n           *ngIf=\"(pdt.stock === 'Out Of Stock')\" data-mdb-ripple-color=\"dark\">Out Of Stock</a>\n\n              \n           \n            \n            \n            \n            \n        </div>\n    </div>\n</div>\n\n\n<div mdbModal #basicModal=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myBasicModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-sm\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"basicModal.hide()\">\n          <span aria-hidden=\"true\">×</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        This Product is Already in Cart!\n      </div>\n      <!--\n      <div class=\"modal-footer\">\n        <button type=\"button\" mdbBtn color=\"secondary\" class=\"waves-light\" aria-label=\"Close\" (click)=\"basicModal.hide()\" mdbWavesEffect>Close</button>\n        <button type=\"button\" mdbBtn color=\"primary\" class=\"relative waves-light\" mdbWavesEffect>Save!</button>\n      </div>-->\n    </div>\n  </div>\n</div>\n\n\n  \n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderSort'\n})\nexport class OrderSortPipe implements PipeTransform {\n\n  \n  transform(value: Array<string>,args: any[]): any {\n\n    const sortField = args[0];\n    const sortDirection = args[1];\n    let multiplier = 1;\n\n    if (sortDirection === 'des'){\n      multiplier = -1;\n    }\n\n\n    value.sort((a: any, b: any) => {\n      if (a[sortField] < b[sortField]){\n        return -1 * multiplier;\n      }\n      else if(a[sortField] > b[sortField]){\n        return 1 * multiplier\n      }\n      else{\n        return 0\n      }\n    })\n\n\n\n    return value;\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-our-services',\n  templateUrl: './our-services.component.html',\n  styleUrls: ['./our-services.component.css']\n})\nexport class OurServicesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"text-center\">Services</h1>\n\n<div class=\"container\">\n    <mdb-carousel class=\"carousel slide carousel-fade\" [animation]=\"'fade'\" [isControls]=\"false\" [interval]=\"3000\">\n        <mdb-carousel-item>\n          <img class=\"d-block w-100 h-50\" src=\"/assets/Delivery/FreeDelivery.jpg\" />\n        </mdb-carousel-item>\n        <mdb-carousel-item>\n          <img class=\"d-block w-100 h-50\" src=\"/assets/Delivery/COD.jpg\" />\n        </mdb-carousel-item>\n        <mdb-carousel-item>\n          <img class=\"d-block w-100 h-50\" src=\"/assets/Delivery/SafeDelivery.jpg\" />\n        </mdb-carousel-item>\n    </mdb-carousel>\n</div>","import { NgModule } from '@angular/core';\r\nimport { SortPipe } from './sort.pipe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n    SortPipe\r\n  ],\r\n    imports: [\r\n  \r\n    ],\r\n    providers: [],\r\n    bootstrap: [],\r\n    exports:[SortPipe],\r\n    \r\n  })\r\n  export class AppModulePipes { }","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { map } from 'rxjs/operators';\nimport { Order } from '../../admin/models/order.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n\n  constructor(private db: AngularFireDatabase) { }\n\n  \n  createOrder(order){\n    return this.db.list('/orders/').push(order);\n   }\n \n   \n   \n   getOrderByUserId(userId)\n   {\n     return this.db.list('/orders/', ref=>ref.orderByChild('userId').equalTo(userId))\n                                             .snapshotChanges()\n                                             .pipe(\n                                              map(changes=>\n                                                changes.map(c => (\n                                                  {\n                                                    key: c.payload.key, ...c.payload.exportVal()\n                                                  }\n                                                ))\n                                            )\n                                             )\n   }\n\n   getProductAllOrder(){\n    return  this.db.list('orders').snapshotChanges()\n    .pipe(\n      map(changes=>\n        changes.map(c => (\n          {\n            key: c.payload.key, ...c.payload.exportVal()\n          }\n        ))\n    ))\n\n  }  \n\n  getOrderByKey(key){\n  return  this.db.object('/orders/'+key+'/items/')\n            .snapshotChanges()\n            .pipe(\n              map(order=>{\n                return order.payload.val();\n              })\n            )\n  }\n\n  getOneOrderByKey(key){\n    return  this.db.object('/orders/'+key)\n              .snapshotChanges()\n              .pipe(\n                map(order=>{\n                  return order.payload.val();\n                })\n              )\n    }\n\n  AddUpdateOrder(order: Order){\n    return this.db.list('/orders/'+order.id).push({\n      status: order.status,\n      trackingid: order.trackingid,\n      courier: order.courier\n    })\n  }\n\n  updateOrderForm(order: Order){\n    return this.db.object('/orders/'+order.id).update({\n      status: order.status,\n      trackingid: order.trackingid,\n      courier: order.courier\n    })\n  }\n\n   getProductByIdOrder(idOrder){\n     return this.db.object('/orders/'+idOrder+'/items/')\n                   .snapshotChanges()\n                   .pipe(\n                     map(products=>{\n                       return products.payload.val();\n                     })\n                   )\n \n   }\n   getProductByIdAddress(idOrder){\n    return this.db.object('/orders/'+idOrder+'/address/')\n                  .snapshotChanges()\n                  .pipe(\n                    map(address=>{\n                      return address.payload.val();\n                    })\n                  )\n\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport 'firebase/auth';\nimport  firebase from 'firebase/app';\nimport { CanActivate, Router } from '@angular/router';\nimport { UsersService } from '../../users/services/users.service';\nimport { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService implements CanActivate {\n  user: firebase.User | null;\n  constructor(private login: AngularFireAuth, private router: Router, private userService: UsersService) { \n    this.login.authState\n              .subscribe(\n                user=>{\n                  this.userService.saveUser(user);\n                }\n              )\n  }\n\n  loginWithGoogle(){\n    return this.login.signInWithRedirect( new firebase.auth.GoogleAuthProvider());\n  }\n  logoutWithGoogle(){\n    return this.login.signOut();\n  }\n\n  getCurrentUser(){\n  return  this.login.authState;\n  }\n  canActivate(): Observable<boolean>{\n  return  this.login.authState\n              .pipe(\n                map(user=>{\n                  if(user) return true;\n                  else\n                  this.router.navigate(['/login']);\n                  return false;\n                })\n              )\n  }\n  getCurrentUserDb(){\n  return  this.login.authState\n                      .pipe(\n                        switchMap(user =>{\n                          return  this.userService.getUserById(user!.uid)\n                        }),\n                        map(user=>{\n                          return user;\n                        })\n                      )\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"h1 text-info text-center\">\n    Mamatha Gifts\n</div>","import { NgModule } from '@angular/core';\r\nimport { ProductsComponent } from './components/products/products.component';\r\nimport { AddProductComponent } from './components/add-product/add-product.component';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { SwiperModule } from \"swiper/angular\";\r\nimport { ProductService } from './services/product.service';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { ProductSortPipe } from './product-sort.pipe';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n    ProductsComponent,\r\n    AddProductComponent,\r\n    ProductDetailsComponent,\r\n    ProductSortPipe,\r\n    \r\n    \r\n    \r\n  ],\r\n    imports: [\r\n      MaterialModule,CommonModule,ReactiveFormsModule,FormsModule,BrowserModule,BrowserAnimationsModule,\r\n      SwiperModule, HttpClientModule, NgxGalleryModule, MDBBootstrapModule.forRoot(),\r\n    ],\r\n    providers: [ProductService],\r\n    bootstrap: [],\r\n    exports: [ProductsComponent],\r\n   \r\n  })\r\n  export class AppModuleProduct { }","import { Component, OnInit, ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { MdbTableDirective, MdbTablePaginationComponent } from 'angular-bootstrap-md';\nimport { Subscription } from 'rxjs';\nimport { OrderService } from 'src/app/modules/orders/services/order.service';\n\n\n@Component({\n  selector: 'app-all-orders',\n  templateUrl: './all-orders.component.html',\n  styleUrls: ['./all-orders.component.css']\n})\nexport class AllOrdersComponent implements OnInit {\n  \n\n  Orders: any[];\n  noOrders:number=0;\n  displayedColumns : String[] = ['dateCreated','key','status','trackingid','actions'];\n  sub:Subscription;\n\n  @ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n  @ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective\n\n  elements: any = [];\n  previous: any = [];\n  headElements = ['dateCreated', 'key', 'status', 'trackingid', 'actions'];\n  constructor(private orderService: OrderService, private router: Router, private cdRef: ChangeDetectorRef\n    ) { }\n \n  ngOnInit() {\n\n    this.orderService.getProductAllOrder()\n                     .subscribe(orders=>{\n                       this.elements= orders;\n                       this.Orders=orders;\n                       this.noOrders=(orders as any[]).length;\n                      });\n                     for (let i = 1; i <= 15; i++) {\n                      this.elements.push({ id: i.toString(), dateCreadted: 'dateCreadted ' + i, key: 'key ' + i, status: 'status ' + i, trackingid: 'trackingid ' + i, actions: 'actions'  + i});\n                    }\n                    this.mdbTable.setDataSource(this.elements);\n                    this.elements = this.mdbTable.getDataSource();\n                    this.previous = this.mdbTable.getDataSource();                        \n                      \n  }\n\n\n  UpdateOrder(key){\n    this.router.navigate(['/order-details', key])\n\n  }\n  \n  ngAfterViewInit() {\n    this.mdbTablePagination.setMaxVisibleItemsNumberTo(5);\n\n    this.mdbTablePagination.calculateFirstItemIndex();\n    this.mdbTablePagination.calculateLastItemIndex();\n    this.cdRef.detectChanges();\n  }\n  \n\n  \n\n\n  \n}\n","<!--\n<div class=\"container\">\n  <div class=\"h3\">All-Orders</div>\n<table mat-table [dataSource]=\"Orders\" class=\"mat-elevation-z8 demo-table\"  matSort>\n    \n    <ng-container matColumnDef=\"dateCreated\">\n      <th mat-header-cell *matHeaderCellDef>Ordered Date</th>\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">{{element.dateCreated | date}}</td>\n    </ng-container>\n \n    \n    <ng-container matColumnDef=\"key\">\n      <th mat-header-cell *matHeaderCellDef>Order Id</th>\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">{{element.key}} </td>\n      \n    </ng-container>\n\n    <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef>Order Status</th>\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">{{element.status}}</td>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"trackingid\">\n      <th mat-header-cell *matHeaderCellDef>Tracking Id</th>\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">{{element.trackingid}}</td>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>Update Order </th>\n      <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n        <button mat-icon-button matTooltip=\"Click to Update\" class=\"iconbutton\" color=\"primary\" (click)=\"UpdateOrder(row.key)\">\n          <mat-icon aria-label=\"Edit\" >update</mat-icon>\n        </button> \n      </td>\n    </ng-container>\n\n   \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n  </table>\n</div>-->\n\n  <div class=\"container table-responsive z-depth-2\" >\n    <div class=\"row\">\n    <table mdbTable #tableEl=\"mdbTable\" [stickyHeader]=\"true\" [hover]=\"true\">\n      \n      <thead>\n      <tr>\n        <th *ngFor=\"let head of headElements; let i = index\" scope=\"col\" [mdbTableSort]=\"elements\" [sortBy]=\"headElements[i]\">{{head | titlecase}}\n          <mdb-icon fas icon=\"sort\"></mdb-icon>\n        </th>\n      </tr>\n      </thead>\n      <tbody #row>\n      <tr *ngFor=\"let el of elements | orderSort:['dateCreated','des']; let i = index\">\n        <th *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\"\n            scope=\"row\">{{el.dateCreated | date}}</th>\n        <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">{{el.key}}</td>\n        <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">{{el.status}}</td>\n        <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">{{el.trackingid}}</td>\n        <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n          <button mat-icon-button matTooltip=\"Click to Update\" class=\"iconbutton\" color=\"primary\" (click)=\"UpdateOrder(el.key)\">\n            <mat-icon aria-label=\"Edit\" >update</mat-icon>\n          </button> \n        </td>\n      </tr>\n      </tbody>\n      <tfoot class=\"grey lighten-5 w-100\">\n      <tr>\n        <td colspan=\"4\">\n          <mdb-table-pagination [tableEl]=\"tableEl\" [searchDataSource]=\"elements\"></mdb-table-pagination>\n        </td>\n      </tr>\n      </tfoot>\n    </table>\n  </div>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { LoginService } from 'src/app/modules/auth/services/login.service';\nimport { userReg } from '../../models/userReg.model';\nimport { UsersService } from '../../services/users.service';\n\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.component.html',\n  styleUrls: ['./user-registration.component.css']\n})\nexport class UserRegistrationComponent implements OnInit {\n\n  regForm: FormGroup;\n  userReg:any;\n  user:any;\n  Registration:userReg;\n  constructor(private fb: FormBuilder, private loginService: LoginService,\n    private userService: UsersService,private router: Router) { \n    this.regForm = this.fb.group({\n      firstname:[null,[Validators.required, Validators.minLength(4)]],\n      lastname:[null,[Validators.required, Validators.minLength(4)]],\n      gender:['Male',[Validators.required]],\n      email:[null,[Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n      mobile:[null,[Validators.required, Validators.minLength(10)]]\n    })\n  }\n\n  ngOnInit(): void {\n\n    this.loginService.getCurrentUserDb()\n                      .subscribe(user=>{\n                        this.user=user.id;\n                        console.log(user.id)\n                      })\n  }\n\n  initalizeUser(userReg){\n    this.regForm = this.fb.group({\n      firstname:[userReg?userReg.firstname:null,[Validators.required, Validators.minLength(4)]],\n      lastname:[userReg?userReg.lastname:null,[Validators.required, Validators.minLength(4)]],\n      gender:[userReg?userReg.gender:'Male',[Validators.required]],\n      email:[userReg?userReg.email:null,[Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n      mobile:[userReg?userReg.mobile:null,[Validators.required, Validators.minLength(10),Validators.maxLength(10)]]\n    })\n  }\n\n  addUser(form){\n    console.log(form);\n    if(this.regForm.valid){\n      let userReg: userReg={\n        id: this.user?this.user:'',\n        firstname: form.firstname,\n        lastname: form.lastname,\n        gender: form.gender,\n        email: form.email,\n        mobile: form.mobile,\n        \n\n      }\n      this.userService.updateUserReg(userReg).then(()=>{\n        this.router.navigate(['/user-profile']);\n      })\n      // if(!this.userReg){\n      //   this.userService.userReg(userReg).then(()=>{\n      //   // this.router.navigate(['/']);\n      //   })\n      // }\n      // else{\n      //   this.userService.updateUserReg(userReg).then(()=>{\n      //     // this.router.navigate(['/']);\n      //   })\n      //}\n  }\n}\n\n  get firstname(){\n    return this.regForm.get('firstname');\n  }\n  get lastname(){\n    return this.regForm.get('lastname');\n  }\n  get gender(){\n    return this.regForm.get('gender');\n  }\n  get email(){\n    return this.regForm.get('email');\n  }\n  get mobile(){\n    return this.regForm.get('mobile');\n  }\n  \n  \n\n  Clear(){\n    this.regForm.setValue({\n      firstname:'',\n      lastname:'',\n      gender:'',\n      email:'',\n      mobile:'',\n\n    })\n  }\n  Cancle(){\n    \n      this.router.navigate(['/']);\n    \n  }\n\n}\n","<form [formGroup]=\"regForm\" (ngSubmit)=\"addUser(regForm.value)\" >\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <div class=\"empControls\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Fisrt Name</mat-label>\n                    <input matInput formControlName=\"firstname\" required>\n                    <mat-error *ngIf=\"firstname.errors?.required\">This field is Required</mat-error>\n                    <mat-error *ngIf=\"firstname.errors?.minlength\">Min 4 Chareters are Required</mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Last Name</mat-label>\n                    <input matInput formControlName=\"lastname\" required>\n                    <mat-error *ngIf=\"lastname.errors?.required\">This field is Required</mat-error>\n                    <mat-error *ngIf=\"lastname.errors?.minlength\">Min 4 Chareters are Required</mat-error>\n                </mat-form-field>\n                <div class=\"myPadding\">\n                    <mat-radio-group formControlName=\"gender\" color=\"primary\"  required>\n                        <mat-radio-button value=\"Male\">Male</mat-radio-button>\n                        <mat-radio-button value=\"Female\">Female</mat-radio-button>\n                        <mat-radio-button value=\"Others\">Others</mat-radio-button>\n                        <mat-error *ngIf=\"gender.errors?.required\">This field is Required</mat-error>\n                    </mat-radio-group>\n                </div>\n        \n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\" required>\n                    <mat-error *ngIf=\"email.errors?.required\">This field is Required</mat-error>\n                    <mat-error *ngIf=\"email.errors?.pattern\">Enter Currect Email</mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Mobile</mat-label>\n                    <input matInput formControlName=\"mobile\" required>\n                    <mat-error *ngIf=\"mobile.errors?.required\">This field is Required</mat-error>\n                    <mat-error *ngIf=\"mobile.errors?.minlength\">Min 10 Numbers are Required</mat-error>\n                </mat-form-field>\n                <div>\n                    <button mdbBtn type=\"submit\" color=\"indigo\" mdbWavesEffect>Submit</button>\n                    <button mdbBtn type=\"submit\" color=\"deep-orange\" (click)=\"Cancle()\" mdbWavesEffect>Cancle</button>\n                </div>\n                \n            </div>\n            \n        </div>\n    </div>\n    \n</div>\n</form>\n\n","\n\n\n\n<div class=\"container\" *ngFor=\"let one of OneOrder\">\n\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n        <button class=\"btn btn-info btn-rounded\" routerLink=\"/all-orders\">Orders</button>\n            <br><br>\n        <p> <span id=\"order\">OrderId:</span>   {{orderKey}}</p>\n\n        <h2 class=\"text-warning\">Address</h2>\n            <div class=\"\" *ngFor=\"let address of userAddress\">\n                <p><span>Name:</span>  {{address.fullname}}</p>\n                <p><span>Mobile:</span> {{address.mobile}}</p>\n                <p><span>Address:</span>\n                    {{address.addressline1}}<br>\n                     {{address.addressline2}}<br>\n                    {{address.state}}\n                \n                </p>\n                <p><span>Pin Code:</span>{{address.pinCode}}</p>\n                \n            </div>\n        </div>\n        <div class=\"col-lg-6\"  *ngFor=\"let one of OneOrder\">\n            <h3>Update Order</h3>\n           \n            <!--Add Update Order Form-->\n                        <div>\n                        <form [formGroup]=\"updateOrderForm\" (ngSubmit)=\"AddUpdateOrder(updateOrderForm.value)\" >\n                        <div class=\"pdtControls\"  >\n                            <mat-form-field  appearance=\"outline\" >\n                                <mat-label>Order Status</mat-label>\n                                <mat-select formControlName=\"status\" [(ngModel)]=\"one.status\" >\n                                    <mat-option class=\"text-info\" value=\"InProcessing\"> In Processing  </mat-option>\n                                    <mat-option class=\"text-success\" value=\"Shipped\"> Shipped </mat-option>\n                                    <mat-option class=\"text-secondary\" value=\"Delivered\"> Delivered  </mat-option>\n                                    <mat-option class=\"text-danger\" value=\"Canceled\"> Canceled </mat-option>                   \n                                </mat-select>\n                            </mat-form-field>\n                \n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Tracking Id</mat-label>\n                                <input matInput formControlName=\"trackingid\" [(ngModel)]=\"one.trackingid\">\n                            </mat-form-field>\n            \n                            <mat-form-field  appearance=\"outline\" >\n                                <mat-label>Shipped By</mat-label>\n                                <mat-select formControlName=\"courier\" [(ngModel)]=\"one.courier\">\n                                    <mat-option class=\"text-info\" value=\"Dhlivery\"> Dhlivery </mat-option>\n                                    <mat-option class=\"text-success\" value=\"E-com\"> E-com Express </mat-option>                  \n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n            \n            \n                        <!--Submit Button and Clear Button-->\n                        <div class=\"buttonrow\">\n                            <button mdbBtn type=\"submit\" color=\"indigo\" mdbWavesEffect [disabled]=\"!updateOrderForm.valid\" >Submit</button>\n                            <button  mdbBtn type=\"button\" color=\"deep-orange\" mdbWavesEffect (click)=\"onClear()\">Clear</button>\n                        </div>\n                        </form>\n                    </div>   \n        </div>\n    </div>\n    \n    \n\n    <div class=\"row\" >\n        <div class=\"col-lg-4\" *ngFor=\"let od of Order\">\n            <mdb-card class=\"z-depth-2\">\n                <!--Card image-->\n                <mdb-card-img class=\"zoom overly\" [src]=\"od.urlImage1\" alt=\"Card image cap\"></mdb-card-img>\n                <!--Card content-->\n                <mdb-card-body>\n                  <mdb-card-title> <h4>{{od.title}}</h4> </mdb-card-title>\n                  <mdb-card-text> {{od.price | currency:\"INR\"}} </mdb-card-text>\n                </mdb-card-body>\n              </mdb-card>\n        </div>\n    </div>\n   \n\n</div>\n<!--Update Order Form\n   \n    <button (click)=\"UpdateOrder(orderKey)\" >Update Order</button>\n\n    <div>\n        <form [formGroup]=\"updateOrderForm\" (ngSubmit)=\"AddUpdateOrder(updateOrderForm.value)\">\n        <div class=\"pdtControls\" *ngFor=\"let one of OneOrder\" >\n            <mat-form-field  appearance=\"outline\" >\n                <mat-label>Order Status</mat-label>\n                <mat-select formControlName=\"status\" [(ngModel)]=\"one.status\">\n                    <mat-option class=\"text-info\" value=\"InProcessing\"> In Processing  </mat-option>\n                    <mat-option class=\"text-success\" value=\"Shipped\"> Shipped </mat-option>\n                    <mat-option class=\"text-secondary\" value=\"Delivered\"> Delivered  </mat-option>\n                    <mat-option class=\"text-danger\" value=\"Canceled\"> Canceled </mat-option>                   \n                </mat-select>\n                <mat-error>This field is Required</mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Tracking Id</mat-label>\n                <input matInput formControlName=\"trackingid\" [(ngModel)]=\"one.trackingid\">\n                <mat-error>This field is Required</mat-error>\n            </mat-form-field>\n\n            <mat-form-field  appearance=\"outline\" >\n                <mat-label>Shipped By</mat-label>\n                <mat-select formControlName=\"courier\" [(ngModel)]=\"one.courier\">\n                    <mat-option class=\"text-info\" value=\"Dhlivery\" > Dhlivery </mat-option>\n                    <mat-option class=\"text-success\" value=\"E-com\"> E-com Express </mat-option>                  \n                </mat-select>\n            </mat-form-field>\n        </div>\n\n\n       \n        <div class=\"buttonrow\">\n            <button mat-raised-button [disabled]=\"!updateOrderForm.valid\" color=\"primary\" >Submit</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onClear()\">Clear</button>\n        </div>\n    </form>\n    </div>    \n\n-->","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\nimport { LoginService } from 'src/app/modules/auth/services/login.service';\nimport { OrderService } from 'src/app/modules/orders/services/order.service';\nimport { UsersService } from 'src/app/modules/users/services/users.service';\nimport { Order } from '../../models/order.model';\n\n@Component({\n  selector: 'app-order-details',\n  templateUrl: './order-details.component.html',\n  styleUrls: ['./order-details.component.css']\n})\nexport class OrderDetailsComponent implements OnInit {\n\n  orderKey:string;\n\n  // Details show order\n  Order: any;\n  orderUser: any[];\n  OneOrder: any[];\n\n  user: any;\n  userAddress: any[];\n\n  // form Order\n  order: Order;\n\n  updateOrderForm: FormGroup\n\n  constructor(private activeRouter: ActivatedRoute, private orderService: OrderService,\n    private fb: FormBuilder, private router: Router, private loginService: LoginService,\n    private userService: UsersService) {\n      this.updateOrderForm = this.fb.group({\n        status: ['In Processing'],\n        trackingid: [null],\n        courier: [null]\n      })\n     }\n\n  ngOnInit() {\n\n    this.orderKey = this.activeRouter.snapshot.params['id'];\n\n    this.orderService.getOrderByKey(this.orderKey)\n                      .subscribe(order=>{\n                        this.Order=order\n                      });\n    this.orderService.getOneOrderByKey(this.orderKey)\n                      .subscribe(oneorder=>{\n                        this.OneOrder=[oneorder] as Order[];\n                      })\n    this.orderService.getProductByIdAddress(this.orderKey)\n                      .subscribe(address=>{\n                        this.userAddress=[address];\n                      })\n     \n    \n    \n                    \n  }\n\n  initalizeOrder(order){\n    this.updateOrderForm = this.fb.group({\n      status: ['In Processing'],\n      trackingid: [null],\n      courier: [null]\n    })\n  }\n\n  AddUpdateOrder(form){\n    console.log(form)\n    if(this.updateOrderForm.valid){\n      let order: Order={\n        id: this.orderKey?this.orderKey:'',\n        status: form.status,\n        trackingid: form.trackingid,\n        courier: form.courier\n\n    }\n    if(!this.orderKey){\n      this.orderService.AddUpdateOrder(order);\n    }\n    else{\n      this.orderService.updateOrderForm(order);\n    }\n    this.router.navigate(['/all-orders'])\n      \n    }\n  }\n  \n\n  \n\n  onClear(){\n\n  }\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MDBModalRef, MdbTableDirective, MdbTablePaginationComponent } from 'angular-bootstrap-md';\nimport { map, mergeMap, switchMap } from 'rxjs/operators';\n\nimport { OrderService } from 'src/app/modules/orders/services/order.service';\n@Component({\n  selector: 'app-user-orders',\n  templateUrl: './user-orders.component.html',\n  styleUrls: ['./user-orders.component.css']\n})\nexport class UserOrdersComponent implements OnInit {\n   @ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective;\n  @ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n  @ViewChild('row', { static: true }) row: ElementRef;\n\n  elements: any = [];\n  headElements = ['Order Date', 'OrderId', 'status', 'trackingid', 'courier','actions'];\n  modalRef: MDBModalRef;\n \n  \n  userid: any;\n  orderIds: any[];\n  Orders:number=0;\n  userOrder: any;  \n  userAddress:any[];\n  isLoading = false;\n\n  today= Date.now()\n\n  displayedColumns : String[] = ['dateCreated','key','status','trackingid','courier','actions'];\n  constructor( private orderService: OrderService, private activateRouter: ActivatedRoute,\n    private cdRef: ChangeDetectorRef, private router: Router) { }\n\n  ngOnInit() {\n    //userid\n    this.isLoading = true;\n    this.userid = this.activateRouter.snapshot.params['id'];\n\n    this.orderService.getOrderByUserId(this.userid)\n                      .subscribe(orderid=>{\n                        console.log(orderid);\n                        this.isLoading = false;\n                        this.orderIds=(orderid) ;\n                        this.Orders=(orderid as any[]).length;\n                        console.log(this.Orders)\n                        this.elements=orderid;\n                      })\n  for (let i = 1; i <= 25; i++) {\n        this.elements.push({dateCreated: i.toString(), key: 'key' + i, status: 'status ' + i, trackingid: 'trackingid ' + i, courier: 'courier ' + i, actions: 'actions ' + i});\n      }\n  \n      this.mdbTable.setDataSource(this.elements);\n      this.elements = this.mdbTable.getDataSource();  \n  }\n\n  orderDetail(key){\n    this.orderService.getProductByIdOrder(key)\n                      .pipe(\n                        mergeMap(order=>this.orderService.getProductByIdAddress(key).pipe(\n                          map(address=>[order,address])\n                          ))).subscribe(([order,address])=>{\n                            this.userOrder= order;\n                            this.userAddress=[address];\n                            console.log(order);\n                            console.log(address)\n                          })\n  }\n  Products(){\n    this.router.navigate(['/products']);\n  }\n\n  ngAfterViewInit() {\n    this.mdbTablePagination.setMaxVisibleItemsNumberTo(8);\n\n    this.mdbTablePagination.calculateFirstItemIndex();\n    this.mdbTablePagination.calculateLastItemIndex();\n    this.cdRef.detectChanges();\n  }\n  \n\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n<div class=\"container\" >\n    \n    <!-- Title Column \n      <table mat-table [dataSource]=\"orderIds | dateSort:['dateCreated', 'des']\" class=\"mat-elevation-z8 demo-table\" >\n          \n          <ng-container matColumnDef=\"dateCreated\">\n            <th mat-header-cell *matHeaderCellDef>Ordered Date</th>\n            <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">{{element.dateCreated | date}}</td>\n          </ng-container>\n       \n          \n          <ng-container matColumnDef=\"key\">\n            <th mat-header-cell *matHeaderCellDef>Order Id</th>\n            <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">{{element.key}} </td>\n            \n          </ng-container>\n      \n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef>Order Status</th>\n            <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">{{element.status}}</td>\n          </ng-container>\n        \n          <ng-container matColumnDef=\"trackingid\">\n            <th mat-header-cell *matHeaderCellDef>Tracking Id</th>\n            <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">{{element.trackingid}}</td>\n          </ng-container>\n    \n          <ng-container  matColumnDef=\"courier\">\n            <th mat-header-cell *matHeaderCellDef>Courier</th>\n            <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">{{element.courier}}</td>\n          </ng-container>\n      \n          \n          <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef>See Details </th>\n            <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n              <button mat-icon-button matTooltip=\"Click to Details\" class=\"iconbutton\" color=\"primary\" (click)=\"orderDetail(row.key)\">\n                <mat-icon aria-label=\"Info\" >info</mat-icon>\n              </button> \n            </td>\n          </ng-container>\n      \n         \n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      \n        </table>-->\n      </div>\n\n      <h3 *ngIf=\"(Orders !=0) && !isLoading\" class=\"h3 text-center text-info\">Orders</h3>\n      <h3 *ngIf=\"(Orders === 0) && !isLoading \" class=\"h3 text-center text-danger\" >You have No-Orders</h3>\n      <div>\n        <div class=\"container table-responsive z-depth-2\">\n          \n          <div class=\"row\" >\n            <table mdbTable #tableEl=\"mdbTable\" [stickyHeader]=\"true\" [hover]=\"true\"  class=\" \">\n              <thead class=\"sticky-top\">\n              <tr>\n                <th *ngFor=\"let head of headElements; let i = index\" [mdbTableSort]=\"elements\"\n                    [sortBy]=\"headElements[i]\"\n                    scope=\"col\">{{head | titlecase}}\n                  <mdb-icon fas icon=\"sort\"></mdb-icon>\n                </th>\n              </tr>\n              </thead>\n              <tbody #row>\n              <tr *ngFor=\"let el of elements | dateSort:['dateCreated','des']; let i = index\">\n                <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\"\n                  style=\"width: 15%;\" >{{el.dateCreated | date}}\n                </td>\n                <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n                  {{el.key}}\n                </td>\n                <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n                  {{el.status}}\n                </td>\n                <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n                  {{el.trackingid}}\n                </td>\n                <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n                  {{el.courier}}\n                </td>\n                <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n                  <button mat-icon-button matTooltip=\"Click to Details\" class=\"iconbutton\" color=\"primary\" (click)=\"orderDetail(el.key)\">\n                    <mat-icon aria-label=\"Info\" >info</mat-icon>\n                  </button> \n                </td>\n              </tr>          \n    \n              </tbody>\n              \n             \n              <tfoot class=\"grey lighten-5 w-100\">\n              <tr>\n                <td colspan=\"5\">\n                  <mdb-table-pagination [tableEl]=\"tableEl\" paginationAlign=\"\"\n                                        [searchDataSource]=\"elements\"></mdb-table-pagination>\n                </td>\n              </tr>\n              </tfoot>\n            </table>\n          </div>\n        </div>\n      </div>\n      \n    \n    <div class=\"container\" id=\"info\">\n        <div class=\"row\" >\n          \n            <div class=\"col-sm-4\" *ngFor=\"let order of userOrder \">\n              <mdb-card class=\"z-depth-2\">\n                <!--Card image-->\n                <mdb-card-img class=\"zoom overly\" [src]=\"order.urlImage1\" alt=\"Card image cap\"></mdb-card-img>\n                <!--Card content-->\n                <mdb-card-body>\n                  <mdb-card-title> <h4>{{order.title}}</h4> </mdb-card-title>\n                  <mdb-card-text> <span>Size:</span>{{order.pdtdimensions}} </mdb-card-text>\n                  <mdb-card-text> {{order.price | currency:\"INR\"}} </mdb-card-text>\n                </mdb-card-body>\n              </mdb-card>\n            </div>\n            <div class=\"col-lg-6\" *ngFor=\"let add of  userAddress\">\n                <h1 class=\"text-warning\">Address</h1>\n              <p ><span>Name:</span> {{add.fullname}} </p>\n              <p><span>Mobile:</span> {{add.mobile}} </p>\n              <p><span>Address:</span> {{add.addressline1}} <br> {{add.addressline2}} </p>\n              <p><span>State:</span> {{add.state}} </p>\n              <p><span>PinCode:</span> {{add.pinCode}} </p>\n            </div>\n        </div>\n    </div>\n    \n    \n    \n    <div class=\"container text-center\" *ngIf=\"(Orders === 0) && !isLoading \">\n    \n      <!-- <img src=\"/assets/Delivery/cart.png\" /> -->\n         \n      <br><br>\n      <div>\n           <button type=\"button\" (click)=\"Products()\"\n           mdbBtn type=\"button\" gradient=\"blue\"  mdbWavesEffect> Shop Now</button>\n      </div>\n    </div>","import { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n  \r\n    ],\r\n    providers: [],\r\n    bootstrap: []\r\n  })\r\n  export class AppModulePayment { }","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/modules/auth/services/login.service';\nimport { ShoppingCartService } from 'src/app/modules/shoppingCart/services/shopping-cart.service';\nimport { OrderService } from '../../services/order.service';\nimport * as uuid from 'uuid';\nimport { UsersService } from 'src/app/modules/users/services/users.service';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { ProductService } from 'src/app/modules/product/services/product.service';\n\n@Component({\n  selector: 'app-cart-orders',\n  templateUrl: './cart-orders.component.html',\n  styleUrls: ['./cart-orders.component.css']\n})\nexport class CartOrdersComponent implements OnInit {\n\n  productsOrder:any[];\n  displayedColumns: string[] = ['title','urlImage','price'];\n  user:any;\n  userid: any[];\n  Address:any[];\n allProducts:any[];\n Stock: number=0;\n productKey:any;\n isLoading = false;\n  constructor(private shoppingCartService: ShoppingCartService, private loginService: LoginService,\n    private orderService: OrderService, private router: Router,private userService: UsersService,\n    private productService: ProductService) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.productService.getAllProducts()\n                        .subscribe(\n                          product=>{\n                            this.isLoading =false;\n                            console.log(product);\n                            this.allProducts=product;\n                          }\n                        )\n    /*\n    this.shoppingCartService.getListItemsShoppingCartMapProducts(this.user)\n                            .subscribe(orders=>{\n                              this.productsOrder=orders;\n                              console.log(orders)\n                            })\n    this.loginService.getCurrentUserDb()\n                      .subscribe(user=>{\n                        this.user=user;\n                        this.userid=[user];\n                        console.log(user)\n                      })*/\n\n              \n    this.loginService.getCurrentUserDb()\n                      .pipe(\n                        mergeMap(userDb=>this.shoppingCartService.getListItemsShoppingCartMapProducts(userDb.id).pipe(\n                          mergeMap(products=>this.userService.getUserByIdAddress(userDb.id).pipe(\n                            map(address=>[userDb,products,address])\n                          ))                         \n                        ))).subscribe(([userDb,products,address])=>{\n                          this.userid=[userDb];\n                          this.user=userDb;\n                          this.productsOrder=products;\n                          this.Address=[address];\n                        })\n    \n    \n  }\n  getTotal()\n  {\n    let total:number=0;\n    if(!this.productsOrder) return total;\n    this.productsOrder.forEach(Product=>{\n      total=total+ + Product.price\n    })\n    return total;\n  }\n  getProduct(key){\n    return this.allProducts.filter(product=>product.key==key);\n    \n  }\n// stock(){\n//   let total:number=0;\n//     if(!this.allProducts) return total;\n//     this.allProducts.forEach(Product=>{\n//       total=total+ + Product.price\n//     })\n//     return total;\n// }\n\n  getStock(key,inventory){\n    this.productKey = key;\n    console.log(this.productKey)\n    this.Stock = inventory - 1;\n   \n  }\n \n\n  userAddress(id){\n    this.userService.getUserByIdAddress(id)\n                    .subscribe(address=>{\n                      this.Address=[address];\n                      console.log(address);\n                    })\n  }\n  updateAddress(){\n    this.router.navigate(['/user-address']);\n  }\n\n  // OrderId() {\n  //   // Math.random should be unique because of its seeding algorithm.\n  //   // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n  //   // after the decimal.\n  //   return '_' + Math.random().toString(36).substr(9);\n  // };\n\n  OnCancel()\n  {\n    this.router.navigate(['/products']);\n\n  }\n  async placeOrder()\n  {\n    //Create the order\n    let order={\n      dateCreated:new Date().getTime(),\n      userId:this.user.id,\n      address:this.user.address,\n      status: 'InProcessing',\n      items:this.productsOrder,\n      total:this.getTotal(),\n      paid:true\n    }\n   let orderResult:any= await this.orderService.createOrder(order);\n   this.productService.updatStock(this.productKey, this.Stock);\n    this.shoppingCartService.clearShoppingCart(this.user.id);\n    \n    this.router.navigate(['/success-order',orderResult.key]);\n   //Clear the shopping Cart\n\n   //let resultPayment =this.paymentService.payment(orderResult.key,this.getTotal());\n   //if(resultPayment)\n   //{\n     //Update the order with paid=true\n   //}\n  // else\n  // {\n     //Update the order with paid=false \n  // }\n\n\n  }\n\n}\n","\n<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n<div class=\"container-fulid\" *ngIf=\"!isLoading\">\n  <h1 class=\" text-center text-danger\">The Summary Orders</h1>\n<div class=\"row\">\n  <div class=\"col-lg-6\">\n    <table mat-table [dataSource]=\"productsOrder\" class=\"mat-elevation-z8\">\n\n      <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n    \n      <!-- Position Column -->\n      <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef> Title </th>\n        <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\"> {{element.title}} \n        <input hidden *ngFor=\"let st of  getStock(element.key, element.inventory)\" />\n        </td>\n      </ng-container>\n  \n  \n  \n      <!-- Symbol Column -->\n      <ng-container matColumnDef=\"urlImage\">\n              <th mat-header-cell *matHeaderCellDef>Image </th>\n              <td mat-cell  *matCellDef=\"let element\" style=\"width: 10%;align-items: center;\">\n                      <img mat-card-image [src]=\"element.urlImage1\"  style=\"width: 100px;height: 100px;\"/>\n              </td>\n      </ng-container>\n  \n      <ng-container matColumnDef=\"price\">\n          <th mat-header-cell *matHeaderCellDef> Price</th>\n          <td mat-cell *matCellDef=\"let element\" style=\"width: 5%;\"> {{element.price | currency:\"INR\" }} </td>\n        </ng-container>\n   \n  \n    <!--  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>--> \n\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  </div>\n  <div class=\"col-lg-6\">\n    <h2 class=\" text-center\">Address</h2>\n    <div class=\"row\" *ngFor=\"let add of Address\">\n      <div class=\"col-lg-6\">\n        \n    \n          <p><span>Name:</span>\n          <mat-form-field appearance=\"outline\">\n            <input matInput disabled [value]=\"add.fullname\">\n          </mat-form-field>\n          </p>\n          <p><span>Mobile:</span>\n            <mat-form-field appearance=\"outline\">\n              <input matInput disabled [value]=\"add.mobile\">\n            </mat-form-field>\n           </p>\n           <p><span>Email:</span>\n            <mat-form-field appearance=\"outline\">\n              <input matInput disabled [value]=\"add.email\">\n            </mat-form-field>\n           </p>\n          \n          \n         \n        \n      </div>\n      <div class=\"col-lg-6\">\n        <p><span>Address:</span>\n          <mat-form-field appearance=\"outline\">\n            <input matInput disabled [value]=\"add.addressline1\">\n          <!-- </mat-form-field>\n          <mat-form-field appearance=\"outline\"> -->\n            <input matInput disabled *ngIf=\"add.addressline2\" [value]=\"add.addressline2\">\n          </mat-form-field></p>\n          <p><span>PinCode:</span> \n            <mat-form-field appearance=\"outline\">\n              <input matInput disabled [value]=\"add.pinCode\">\n            </mat-form-field> </p>\n          <p><span>State:</span> \n            <mat-form-field appearance=\"outline\">\n              <input matInput disabled [value]=\"add.state\">\n            </mat-form-field></p>\n\n        <button (click)=\"updateAddress()\" \n        mdbBtn type=\"button\" color=\"yellow\" mdbWavesEffect data-mdb-ripple-color=\"dark\">UpdateAddress </button> \n      </div>\n    </div>\n    <mat-card class=\"example-card \">\n      <mat-card-header fxLayoutAlign=\"end center\">\n        <mat-card-title class=\"card-container-left\">Total : {{getTotal() | currency:\"INR\"}} </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n      </mat-card-content>\n      <mat-card-actions fxLayoutAlign=\"space-between end\" >\n        <button   mdbBtn type=\"button\" gradient=\"aqua\" mdbWavesEffect data-mdb-ripple-color=\"dark\" (click)=\"placeOrder()\">Place Order</button>\n        <button   (click)=\"OnCancel()\"\n        mdbBtn type=\"button\" color=\"danger\" mdbWavesEffect data-mdb-ripple-color=\"dark\">Cancel</button>      \n      </mat-card-actions>\n  </mat-card>\n  </div>\n \n</div>\n\n<!-- <div hidden *ngFor=\"let pdt of productsOrder\">\n <div *ngFor=\"let pd of getProduct(pdt.key)\">\n   <p *ngFor=\"let st of getStock(pd.inventory, pd.key)\"></p>\n </div>\n</div> -->\n  \n\n\n\n\n\n</div>","import { NgModule } from '@angular/core';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { AppRoutingModule } from 'src/app/app-routing.module';\r\nimport { MaterialModule } from 'src/app/material.module';\r\n\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { OurproductsComponent } from './components/ourproducts/ourproducts.component';\r\nimport { OurServicesComponent } from './components/our-services/our-services.component';\r\nimport { ContactusComponent } from './components/contactus/contactus.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n    AboutComponent,\r\n    HomeComponent,\r\n    OurproductsComponent,\r\n    OurServicesComponent,\r\n    ContactusComponent,\r\n    \r\n\r\n  ],\r\n    imports: [\r\n    MaterialModule,  AppRoutingModule,MDBBootstrapModule.forRoot()\r\n    ],\r\n    providers: [],\r\n    bootstrap: []\r\n  })\r\n  export class AppModuleCommon { }","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(value: Array<string>, args:any[]): any {\n\n    const sortField = args[0];\n\n    value.sort((a: any, b: any) => {\n      if (a[sortField] < b[sortField]){\n        return -1\n      }\n      else if(a[sortField] > b[sortField]){\n        return 1\n      }\n      else{\n        return 0\n      }\n    })\n    \n    return value;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../../services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private loginService: LoginService) { }\n\n  ngOnInit(): void {\n  }\n  onLogin(){\n    this.loginService.loginWithGoogle();\n  }\n\n}\n","\n<div class=\"container\">\n    <button type=\"button\" (click)=\"onLogin()\" class=\"btn btn-outline-info\" data-mdb-ripple-color=\"dark\">Login with Google</button>\n</div>\n\n\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\nimport { LoginService } from 'src/app/modules/auth/services/login.service';\nimport { User } from '../../models/user.model';\nimport { UsersService } from '../../services/users.service';\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.css']\n})\nexport class UserInfoComponent implements OnInit {\n\n\n  userForm: FormGroup;\n  productKey: any;\n  userid: any;\n  Address: any[];\n  user: any;\n\n  constructor(private formBulider: FormBuilder, private loginService: LoginService,\n    private userService: UsersService, private router: Router,\n    private activeRouter: ActivatedRoute ) {\n    this.userForm= this.formBulider.group({\n      fullname: [null, [Validators.required,Validators.minLength(6)]],\n      mobile: [null, [Validators.required, Validators.minLength(10)]],\n      email: [null, [Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n      addressline1: [null, Validators.required],\n      addressline2: [null],\n      pinCode: [null, [Validators.required,Validators.minLength(6)]],\n      state: [null, Validators.required]\n\n    })\n   }\n\n  ngOnInit() {\n    this.loginService.getCurrentUser()\n    .pipe(\n      switchMap(user=>{\n        console.log(user);\n        if(!user) return 'e';\n        return this.loginService.getCurrentUserDb();\n      }),\n     map(userDb=>{\n       return [userDb]\n     })\n    )\n    .subscribe(([userdb]) =>{\n      if(userdb!= 'e') \n      {\n        \n        this.user=userdb\n      }\n      else\n      this.user=null;\n    }, errur=> console.log );     \n\n\n    this.productKey = this.activeRouter.snapshot.params['id'];\n    \n    this.userService.getUserByIdAddress(this.userid)\n                    .subscribe(address=>{\n                      this.Address=[address];\n                      console.log(address)\n                    })\n    \n  }\n \n\n  initalizeUser(user){\n    this.userForm= this.formBulider.group({\n      fullname: [user?user.fullname:null, [Validators.required,Validators.minLength(6)]],\n      mobile: [user?user.mobile:null, [Validators.required, Validators.minLength(10),Validators.maxLength(10)]],\n      email:[user?user.email:null,[Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n      addressline1: [user?user.addressline1:null, Validators.required],\n      addressline2: [user?user.addressline2:null],\n      pinCode: [user?user.pinCode:null,  [Validators.required,Validators.maxLength(6),Validators.minLength(6)]],\n      state: [user?user.state:null, Validators.required]\n\n    })\n\n  }\n\n \n  get fullname(){\n    return this.userForm.get('fullname');\n  }\n  get mobile(){\n    return this.userForm.get('mobile');\n  }\n  get email(){\n    return this.userForm.get('email');\n  }\n  get pincode(){\n    return this.userForm.get('pinCode')\n  }\n\n  AddUser(form){\n    console.log(form);\n    if(this.userForm.valid){\n      let user: User={\n        id: this.user.id,\n        fullname: form.fullname,\n        mobile: form.mobile,\n        email: form.email,\n        addressline1: form.addressline1,\n        addressline2: form.addressline2,\n        pinCode: form.pinCode,\n        state: form.state\n\n      }\n      if(!this.productKey){\n        this.userService.updateUser(user).then(()=>{\n          this.router.navigate(['/user-profile'])\n        })\n       \n      }\n      else{\n        this.userService.updateUser(user).then(()=>{\n          this.router.navigate(['/orders', this.productKey]);\n        })\n      }\n      \n    }\n\n  }\n\n  Cancle(){\n    if(!this.productKey){\n      this.router.navigate(['/user-profile']);\n    }\n    else{\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n","\n<form [formGroup]=\"userForm\" (ngSubmit)=\"AddUser(userForm.value)\">\n    <mat-grid-list cols=\"2\" rowHeight=\"400px\">\n    <mat-grid-tile>\n        <div class=\"empControls\">\n           \n            <mat-form-field appearance=\"outline\">\n                <mat-label>FullName</mat-label>\n                <input matInput formControlName=\"fullname\" required>\n                <mat-error *ngIf=\"fullname.errors?.required\">This field is Required</mat-error>\n                <mat-error *ngIf=\"fullname.errors?.minlength\">Min 6 Charecter are Required</mat-error>\n            </mat-form-field>\n    \n            <mat-form-field appearance=\"outline\">\n                <mat-label>Email</mat-label>\n                <input matInput formControlName=\"email\" required>\n                <mat-error *ngIf=\"email.errors?.required\">This field is Required</mat-error>\n                <mat-error *ngIf=\"email.errors?.pattern\">Enter Currect Email</mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Mobile</mat-label>\n                <input matInput formControlName=\"mobile\" required [class.is-invalid]=\"mobile.valid && mobile.touched\" required>\n                <mat-error *ngIf=\"userForm.controls['mobile'].errors?.required\">This field is Required</mat-error>\n                <mat-error *ngIf=\"userForm.controls['mobile'].errors?.minlength\">Min 10 Numbers are Required</mat-error>\n                <mat-error *ngIf=\"userForm.controls['mobile'].errors?.maxlength\">Max 10 Numbers are Required</mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Pincode</mat-label>\n                <input matInput formControlName=\"pinCode\" required>\n                <mat-error *ngIf=\"pincode.errors?.required\">This field is Required</mat-error>\n                <mat-error *ngIf=\"pincode.errors?.minlength\">Min 6 Numbers are Required</mat-error>\n            </mat-form-field>\n\n    \n        </div>\n    </mat-grid-tile>\n    <mat-grid-tile>\n        <div class=\"empControls\">\n            \n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Address Line 1</mat-label>\n                    <input matInput formControlName=\"addressline1\" required>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Address Line 2</mat-label>\n                    <input matInput formControlName=\"addressline2\">\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>State</mat-label>\n                    <input matInput formControlName=\"state\" required>\n                </mat-form-field>  \n                \n                \n                <div class=\"buttonrow\">\n                    <button  mdbBtn type=\"submit\" gradient=\"blue\"  mdbWavesEffect\n                    data-mdb-ripple-color=\"dark\">Submit</button>\n                    <a mdbBtn type=\"button\" color=\"danger\" mdbWavesEffect\n                    data-mdb-ripple-color=\"dark\"   (click)=\"Cancle()\" >Cancle</a>\n                </div>\n    \n        </div>\n    \n        \n    </mat-grid-tile>\n    </mat-grid-list>\n    \n    </form>\n    ","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'productSort'\n})\nexport class ProductSortPipe implements PipeTransform {\n\n  transform(value: Array<string>,args: any[]): any {\n\n    const sortField = args[0];\n    const sortDirection = args[1];\n    let multiplier = 1;\n\n    if (sortDirection === 'des'){\n      multiplier = -1;\n    }\n\n\n    value.sort((a: any, b: any) => {\n      if (a[sortField] < b[sortField]){\n        return -1 * multiplier;\n      }\n      else if(a[sortField] > b[sortField]){\n        return 1 * multiplier\n      }\n      else{\n        return 0\n      }\n    })\n\n\n\n    return value;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StockService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n  getStock(){\n    return  this.db.list('stock')\n                  .snapshotChanges()\n                  .pipe(\n                    map(change =>change.map(c=>({\n                     key: c.payload.key, ...c.payload.exportVal()\n                    })))\n                  )\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminProductsComponent } from './modules/admin/components/admin-products/admin-products.component';\nimport { AllOrdersComponent } from './modules/admin/components/all-orders/all-orders.component';\nimport { OrderDetailsComponent } from './modules/admin/components/order-details/order-details.component';\nimport { AdminService } from './modules/admin/services/admin.service';\nimport { LoginComponent } from './modules/auth/components/login/login.component';\nimport { LoginService } from './modules/auth/services/login.service';\nimport { AboutComponent } from './modules/common/components/about/about.component';\nimport { ContactusComponent } from './modules/common/components/contactus/contactus.component';\nimport { HomeComponent } from './modules/common/components/home/home.component';\nimport { CartOrdersComponent } from './modules/orders/components/cart-orders/cart-orders.component';\nimport { OrdersComponent } from './modules/orders/components/orders/orders.component';\nimport { SucessOrderComponent } from './modules/orders/components/sucess-order/sucess-order.component';\nimport { AddProductComponent } from './modules/product/components/add-product/add-product.component';\nimport { ProductDetailsComponent } from './modules/product/components/product-details/product-details.component';\nimport { ProductsComponent } from './modules/product/components/products/products.component';\nimport { EmptyCartComponent } from './modules/shoppingCart/components/empty-cart/empty-cart.component';\nimport { ShoppingCartComponent } from './modules/shoppingCart/components/shopping-cart/shopping-cart.component';\nimport { UserAddressComponent } from './modules/users/components/user-address/user-address.component';\nimport { UserInfoComponent } from './modules/users/components/user-info/user-info.component';\nimport { UserOrdersComponent } from './modules/users/components/user-orders/user-orders.component';\nimport { UserProfileComponent } from './modules/users/components/user-profile/user-profile.component';\nimport { UserRegistrationComponent } from './modules/users/components/user-registration/user-registration.component';\n\nconst routes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'add-product', component: AddProductComponent,canActivate:[LoginService]},\n  {path:'add-product/:id', component: AddProductComponent,canActivate:[LoginService]},\n  {path:'products', component: ProductsComponent},\n  {path: 'product-details/:id', component: ProductDetailsComponent},\n  {path:'login', component: LoginComponent},\n  {path:'about', component: AboutComponent},\n  {path:'contactus', component: ContactusComponent},\n  {path:'admin-products', component: AdminProductsComponent, canActivate:[LoginService,AdminService]},\n  {path:'success-order/:id', component: SucessOrderComponent,},\n  {path:'orders/:id', component: OrdersComponent,canActivate:[LoginService]},\n  {path:'cart-orders', component: CartOrdersComponent,canActivate:[LoginService]},\n  {path:'all-orders', component: AllOrdersComponent,canActivate:[LoginService]},\n  {path:'order-details/:id', component: OrderDetailsComponent,canActivate:[LoginService]},\n  {path:'user-address', component: UserAddressComponent,canActivate:[LoginService]},\n  {path:'user-info', component: UserInfoComponent,canActivate:[LoginService]},\n  {path:'user-info/:id', component: UserInfoComponent,canActivate:[LoginService]},\n  {path:'user-orders/:id', component: UserOrdersComponent,canActivate:[LoginService]},\n  {path:'user-profile', component: UserProfileComponent,canActivate:[LoginService]},\n  {path:'user-registration', component: UserRegistrationComponent,canActivate:[LoginService]},\n  {path:'empty-cart', component: EmptyCartComponent,canActivate:[LoginService]},\n  {path:'shopping-cart/:id', component: ShoppingCartComponent,canActivate:[LoginService] }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { ShoppingCartComponent } from './components/shopping-cart/shopping-cart.component';\nimport { EmptyCartComponent } from './components/empty-cart/empty-cart.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n    ShoppingCartComponent,\r\n    EmptyCartComponent\r\n  ],\r\n    imports: [\r\n  MaterialModule,CommonModule,BrowserAnimationsModule, AngularFireDatabaseModule, MDBBootstrapModule.forRoot()\r\n    ],\r\n    providers: [],\r\n    bootstrap: [],\r\n    exports:[ShoppingCartComponent]\r\n  })\r\n  export class AppModuleShoppingCart { }","import { NgModule } from '@angular/core';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\nconst modules = [\r\n  CdkTableModule,\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatBadgeModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatStepperModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatFormFieldModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [modules],\r\n  exports: [modules],\r\n})\r\nexport class MaterialModule {\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n    FooterComponent\r\n  ],\r\n    imports: [\r\n MaterialModule, MDBBootstrapModule.forRoot(),BrowserAnimationsModule,CommonModule,\r\n RouterModule\r\n    ],\r\n    providers: [],\r\n    bootstrap: [],\r\n    exports:[FooterComponent]\r\n  })\r\n  export class AppModuleFooter { }","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { title } from 'process';\nimport { Subscription } from 'rxjs';\nimport { map, mergeMap, switchMap } from 'rxjs/operators';\nimport { LoginService } from 'src/app/modules/auth/services/login.service';\nimport { CategoriesService } from 'src/app/modules/common/services/categories.service';\nimport { ShoppingCartService } from 'src/app/modules/shoppingCart/services/shopping-cart.service';\nimport { ProductService } from '../../services/product.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  categories: any[]\n  products: any[]\n  product: any;\n  productsShoppingCart: any[];\n  sub: Subscription;\n  user: any;\n  isLoading = false;\n\n\n  constructor(private productService: ProductService, private categorieService: CategoriesService,\n    private shoopingCartService: ShoppingCartService, private router: Router, private db: AngularFireDatabase,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.sub = this.categorieService.getAllCategories()\n      .pipe(\n        mergeMap(categories => this.productService.getAllProducts().pipe(\n          map(products => [categories, products])\n\n        ))).subscribe(([categories, products]) => {\n          this.isLoading = false;\n          this.categories = categories;\n          this.products = products;\n        });\n\n\n\n\n  }\n\n  getProductsByCategorie(key) {\n    return this.products.filter(product => product.categorie == key);\n\n  }\n\n\n  /*\n    AddToCart(pdt){\n      console.log(pdt)\n     this.shoopingCartService.AddToCart(pdt);\n    }*/\n\n\n  Details(key) {\n\n    this.router.navigate(['/product-details', key], { relativeTo: this.activatedRoute });\n  }\n\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n\n<mat-tab-group mat-align-tabs=\"center\" *ngIf=\"!isLoading\">\n  <mat-tab *ngFor=\"let categorie of categories\" [label]=\"categorie.label\">\n   <div class=\"container\">\n     <div class=\"row\">\n       <div class=\"col-lg-4\" *ngFor=\"let pdt of getProductsByCategorie(categorie.key) \">\n\n        <!-- <mdb-card class=\"z-depth-2\" (click)=\"Details(pdt.key)\">\n          <mdb-card-img class=\"zoom overly\" [src]=\"pdt.urlImage1\" alt=\"Card image cap\" >\n\n          </mdb-card-img>         \n          <mdb-card-body>\n            <mdb-card-title> <h4>{{pdt.title}}</h4> </mdb-card-title>\n            <mdb-card-text> {{pdt.price | currency:\"INR\"}} </mdb-card-text>\n          </mdb-card-body>\n        </mdb-card> -->\n\n        \n        <div class=\"card\" >\n          <div class=\"view overlay zoom rounded z-depth-2  mb-4 \" data-mdb-ripple-color=\"light\">\n            <img [src]=\"pdt.urlImage1\" class=\" card-img-top \" style=\"height: 300px;\" />\n            <a>\n              <div class=\"mask rgba-white-slight waves-light\" \n              (click)=\"Details(pdt.key)\" style=\"background-color: rgba(251, 251, 251, 0.15);\"></div>\n            </a>\n          </div>\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{pdt.title}}</h5>\n            <p class=\"card-text\"> {{pdt.price | currency:'INR'}} </p>    \n          </div>\n        </div>\n       \n\n       </div>\n       </div>\n     </div>\n  \n  </mat-tab>\n  \n    \n  \n</mat-tab-group>\n\n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { generate } from 'rxjs';\nimport { map, mergeMap, switchMap } from 'rxjs/operators';\nimport { LoginService } from 'src/app/modules/auth/services/login.service';\nimport { ProductService } from 'src/app/modules/product/services/product.service';\nimport { UsersService } from 'src/app/modules/users/services/users.service';\nimport { OrderService } from '../../services/order.service';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n\n \n \n  user: any;\n  productKey: any;\n  Product: any[];\n  Address: any[];\n  orderId=19051096 ;\n\n\n  \n\n  constructor(private orderService: OrderService, private loginService: LoginService,\n    private activeRouter: ActivatedRoute, private productService: ProductService,\n    private userService: UsersService, private router: Router) { }\n\n  \n\n  ngOnInit() {\n\n  \n    this.loginService.getCurrentUserDb()\n                      .pipe(\n                        mergeMap(userDb=>this.userService.getUserByIdAddress(userDb.id).pipe(\n                          map(address=>[userDb, address])\n                        ))).subscribe(([userDb,address])=>{\n                          this.user=userDb;\n                          this.Address=[address]\n                        })\n      \n      this.productKey= this.activeRouter.snapshot.params['id'];\n\n      this.productService.getProduct(this.productKey)\n                                          .subscribe(products =>{\n                                            this.Product= [products]\n                                                                   \n                                          })\n    }\n\n    updateAddress(){\n      this.router.navigate(['/user-info', this.productKey]);\n    }\n\n    \n   async PlaceOrder(){\n    let order ={\n      dateCreated: new Date().getTime(),\n     \n      userId: this.user.id,\n      address: this.user.address,\n      status: 'InProcessing',\n      orderId: this.orderId + 1,\n      items: this.Product,\n      paid: true\n    }\n    let orderResult:any = await this.orderService.createOrder(order);  \n    \n    this.router.navigate(['/success-order', orderResult.key]);\n    }\n    \n\n    Cancle(){\n      this.router.navigate(['/']);\n    }\n    \n}\n","\n<div class=\"container-fulid\">\n    <h1 class=\" text-center text-danger\">The Summary Order</h1>\n    <div class=\"row\">\n        <div class=\"col-lg-6 \" *ngFor=\"let pdt of Product\">\n            <div class=\"card\">\n                <div class=\"bg-image hover-overlay ripple text-center\" data-mdb-ripple-color=\"light\">\n                  <img [src]=\"pdt.urlImage1\" class=\"img-fluid\" />\n                </div>\n                <div class=\"card-body\">\n                  <h5 class=\"card-title\"> {{pdt.title}} </h5>\n                  <p class=\"card-text\"> {{pdt.price | currency:\"INR\"}} </p>\n                </div>\n            </div>\n              \n        </div>\n        <div class=\"col-lg-6\">\n          <h2 class=\" text-center\">Address</h2>\n          <div class=\"row\" *ngFor=\"let add of Address\">\n            <div class=\"col-lg-6\">\n              \n          \n                <p><span>Name:</span>\n                <mat-form-field appearance=\"outline\">\n                  <input matInput disabled [value]=\"add.fullname\">\n                </mat-form-field>\n                </p>\n                <p><span>Mobile:</span>\n                  <mat-form-field appearance=\"outline\">\n                    <input matInput disabled [value]=\"add.mobile\">\n                  </mat-form-field>\n                 </p>\n                 <p><span>Email:</span>\n                  <mat-form-field appearance=\"outline\">\n                    <input matInput disabled [value]=\"add.email\">\n                  </mat-form-field>\n                 </p>\n                \n                \n               \n              \n            </div>\n            <div class=\"col-lg-6\">\n              <p><span>Address:</span>\n                <mat-form-field appearance=\"outline\">\n                  <input matInput disabled [value]=\"add.addressline1\">\n                <!-- </mat-form-field>\n                <mat-form-field appearance=\"outline\"> -->\n                  <input matInput disabled *ngIf=\"add.addressline2\" [value]=\"add.addressline2\">\n                </mat-form-field></p>\n                <p><span>PinCode:</span> \n                  <mat-form-field appearance=\"outline\">\n                    <input matInput disabled [value]=\"add.pinCode\">\n                  </mat-form-field> </p>\n                <p><span>State:</span> \n                  <mat-form-field appearance=\"outline\">\n                    <input matInput disabled [value]=\"add.state\">\n                  </mat-form-field></p>\n      \n              <button (click)=\"updateAddress()\" \n              mdbBtn type=\"button\" color=\"yellow\" mdbWavesEffect data-mdb-ripple-color=\"dark\">UpdateAddress </button> \n            </div>\n          </div>\n        <mat-card class=\"example-card \">\n            <mat-card-header fxLayoutAlign=\"end center\">\n              <mat-card-title class=\"card-container-left\" *ngFor=\"let pdt of Product\">\n                  Total : {{pdt.price | currency:\"INR\"}} \n                </mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n            </mat-card-content>\n            <mat-card-actions fxLayoutAlign=\"space-between end\">\n              <button   mdbBtn type=\"button\" gradient=\"aqua\" mdbWavesEffect data-mdb-ripple-color=\"dark\" (click)=\"PlaceOrder()\">Place Order</button>\n              <button   (click)=\"Cancle()\"\n              mdbBtn type=\"button\" color=\"danger\" mdbWavesEffect data-mdb-ripple-color=\"dark\">Cancel</button>      \n            </mat-card-actions>\n        </mat-card>\n\n        </div>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}